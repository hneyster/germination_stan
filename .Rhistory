mxml2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="mixl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar = list(trout.type = c("rv.index", "rv.frame"), proximity=c("`water.prox-`", "rv.frame"), cost=c("rv.index", "rv.frame")), R=30, haltons=NA, panel=TRUE)
summary(mxml2)
mxml2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="mixl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar = list( proximity=c(names(cov))), R=30, haltons=NA, panel=TRUE)
names(cov)
mxml2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="mixl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar = list( proximity=(names(cov))), R=30, haltons=NA, panel=TRUE)
mxml2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="mixl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar = list( proximity=c("farmer-","water.prox-","angler","trout.risk-", "unique.special-" ,"conservation.funder","donate.eff-","income" ,"rv.frame","rv.index" )), R=30, haltons=NA, panel=TRUE)
mxml2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="mixl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar = list( proximity=c("farmer-","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" )), R=30, haltons=NA, panel=TRUE)
mxml2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="mixl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar = list( proximity=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" )), R=30, haltons=NA, panel=TRUE)
summary(mxml2)
mxml2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="mixl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar = list( proximity=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),effectiveness=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),trout.type=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),cost=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" )), R=30, haltons=NA, panel=TRUE)
summary(mxml2)
g2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="mixl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar = list( proximity=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),effectiveness=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),trout.type=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),cost=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" )), R=30, panel=TRUE, notscale = c(0,0,0,0,1), typeR = FALSE)
g2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="gmnl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar = list( proximity=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),effectiveness=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),trout.type=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),cost=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" )), R=30, panel=TRUE, notscale = c(0,0,0,0,1), typeR = FALSE)
g2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="gmnl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar = list( proximity=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),effectiveness=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),trout.type=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),cost=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" )), R=30, panel=TRUE, notscale = c(0,0,0,0,0,1), typeR = FALSE)
g<-gmnl(choice ~ cost | 0|0, data=form.dat, model="gmnl", ranp = c(cost = "ln"), mvar = list(cost = c("income")), R=30, panel=TRUE)
summary(g)
g2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="gmnl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), R=30, panel=TRUE, notscale = c(0,0,0,0,0,1), typeR = FALSE)
g2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="gmnl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "conservation.funder"), R=30, panel=TRUE, notscale = c(0,0,0,0,0,1), typeR = FALSE)
g2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="gmnl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "conservation.funder"), R=30, panel=TRUE, notscale = c(0,0,0,0,1), typeR = FALSE)
g2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="gmnl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "conservation.funder"), R=30, panel=TRUE, typeR = FALSE)
g2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`, data=form.dat, model="gmnl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "`farmer-`"), R=30, panel=TRUE, typeR = FALSE)
g2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0|  data=form.dat, model="gmnl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), R=30, panel=TRUE, typeR = FALSE)
g2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| , data=form.dat, model="gmnl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), R=30, panel=TRUE, typeR = FALSE)
g2<-gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0 , data=form.dat, model="gmnl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), R=30, panel=TRUE, typeR = FALSE)
summary(g2)
g3 <- gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0|income +1 , data=form.dat, model="gmnl", ranp = c(cost = "t", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "income"), R=30, panel=TRUE, typeR = FALSE)
g3 <- gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0|income +1 , data=form.dat, model="gmnl", ranp = c(cost = "ln", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "income"), R=30, panel=TRUE, typeR = FALSE)
form.dat$cost
form.dat$cost %>% table()
g3 <- gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0|income +1 , data=form.dat, model="gmnl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "income"), R=30, panel=TRUE, typeR = FALSE)
g3 <- gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0|income -1 , data=form.dat, model="gmnl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "income"), R=30, panel=TRUE, typeR = FALSE)
g3 <- gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0|income  , data=form.dat, model="gmnl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "income"), R=30, panel=TRUE, typeR = FALSE)
g<-gmnl(choice ~ cost | 0|0|income|income, data=form.dat, model="gmnl", ranp = c(cost = "ln"), mvar = list(cost = c("income")), R=30, panel=TRUE)
g<-gmnl(choice ~ cost | 0|0|income, data=form.dat, model="gmnl", ranp = c(cost = "ln"), mvar = list(cost = c("income")), R=30, panel=TRUE)
g<-gmnl(choice ~ cost | 0|0, data=form.dat, model="gmnl", ranp = c(cost = "ln"), mvar = list(cost = c("income")), R=30, panel=TRUE)
g3 <- gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0  , data=form.dat, model="gmnl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "income"), R=30, panel=TRUE, typeR = FALSE)
summary(g3)
AIC(g3)
AIC(mxml)
AIC(mxml2)
g4 <- gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0|0|rv.frame, data=form.dat, model="gmnl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "income"), R=30, panel=TRUE, typeR = FALSE)
summary(g4)
g4 <- gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0|income|rv.frame, data=form.dat, model="gmnl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "income"), R=50, panel=TRUE, typeR = FALSE)
smnl<-gmnl(choice ~ cost + effectiveness + trout.type + proximity + optout| 0|0|0|rv.index, data=form.dat, model="smnl", R=50, notscale = c(0,0,0,0,1), typeR = FALSE, panel=TRUE)
smnl2<-gmnl(choice ~ cost + effectiveness + trout.type + proximity + optout| 0|0|0|rv.index, data=form.dat, model="smnl", R=50, notscale = c(0,0,0,0,1), typeR = FALSE, panel=TRUE)
summary(sml2)
summary(smnl2)
summary(smnl)
summary(mxml2)
summary(g2)
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "l", effectiveness = "n", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE)
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "ln", effectiveness = "n", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE)
table(form.dat$cost)
hist(form.dat$cost)
ln(0)
log(o)
log(0)
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE)
summary(mxml)
BIC(mxml)
BIC(mxml2)
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "n", effectiveness = "ln", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE)
summary(mxml)
BIC(mxml)
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "n", effectiveness = "cn", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE)
summary(mxml)
BIC(mxml)
summary(g4)
summary(g3)
g4 <- gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0  , data=form.dat, model="gmnl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"), mvar=list(cost = "income"), R=30, panel=TRUE, typeR = FALSE, hgamma="indirect")
summary(g4)
exp(8.2)/(1+exp(8.2))
summary(g3)
summary(smnl)
BIC(smnl)
BIC(g3)
BIC(mxml)
BIC(mxml)
BIC(mxml2)
BIC(g)
BIC(g2)
BIC(g3)
BIC(smnl2)
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "ln", effectiveness = "n", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE)
table(form.dat$effectiveness)
length("TRUE" %in% (form.dat$cost<0))
length("TRUE" %in% (form.dat$cost>0))
((form.dat$cost<0))
for i in 1:nrow(form.dat){ if (form.dat$cost[i]<0) {print(i)} else{}}
for (i in 1:nrow(form.dat)){ if (form.dat$cost[i]<0) {print(i)} else{}}
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "ln", effectiveness = "n", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE)
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "n", -effectiveness = "n", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE)
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE)
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE, correlation = TRUE)
mxml`<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE, correlation = TRUE)
mxml1<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE, correlation = TRUE)
summary(mxml1)
BIC(mxml1)
BIC(mxml)
sort(form.dat$cost{1})
sort(form.dat$cost[1])
order(form.dat$cost[1])
order(form.dat$cost[1:10])
head(form.dat$cost)
which(form.dat$cost<0)
which(form.dat$cost==5)
which(form.dat$cost==5) %>% length()
which(form.dat$cost==0) %>% length()
which(form.dat$cost!=0) %>% length()
which(form.dat$cost !%in% c(0,5,50) %>% length()
which(form.dat$cost -%in% c(0,5,50) %>% length()
which(form.dat$cost %in% -c(0,5,50) %>% length()
which(form.dat$cost %in% -c(0,5,50)) %>% length()
which(form.dat$cost %in% -c(0,5,50, 100,250,500)) %>% length()
which(form.dat$cost %in% c(0,5,50, 100,250,500)) %>% length()
dim(form.dat)
lenfth(form.dat$cost)
lengt(form.dat$cost)
length(form.dat$cost)
which(form.dat$cost %in% c(0,5,50, 100,250,500, NA)) %>% length()
which(form.dat$cost == c(0) %>% length()
which(form.dat$cost == c(0)) %>% length()
which(form.dat$cost == c(0,5)) %>% length()
which(form.dat$cost == 0 |5) %>% length()
which(form.dat$cost == 0 |5 | 50) %>% length()
which(form.dat$cost == 2|3) %>% length()
which(form.dat$cost == 2) %>% length()
which(form.dat$cost == 0) %>% length()
which(form.dat$cost <0) %>% length()
which(is.na(form.dat$cost)) %>% length()
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "ln", effectiveness = "n", proximity="n", trout.type="n"),  R=30, haltons=NA, panel=TRUE)
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "ln", effectiveness = "n", proximity="n", trout.type="n"),  print.init = TRUE, R=30, haltons=NA, panel=TRUE)
mxml<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"),  print.init = TRUE, R=30, haltons=NA, panel=TRUE)
?gmnl
(0:5)
seq(0,5)
seq(0,0)
seq(0,10
)
seq(0,10,1)
seq(0,0,2)
seq(0,0,4)
seq(0,1,4)
rep(0,10)
mxml.s<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"),  print.init = TRUE, R=30, haltons=NA, panel=TRUE, start = c(0,.5,rep(0,7)))
summary(mxml.s)
mxml.s<-gmnl(choice ~ cost + effectiveness + trout.type +proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "ln", effectiveness = "n", proximity="n", trout.type="n"),  print.init = TRUE, R=30, haltons=NA, panel=TRUE, start = c(0,-.5,rep(0,7)))
summary(mxml.s)
sumary(mxml.s)
summary(mxml)
# constaining the cost to -lognormal was yielding an error, so
mxml.s<-gmnl(choice ~ cost + effectiveness + trout.type + proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"),  print.init = TRUE, R=30, haltons=NA, panel=TRUE, start = c(0,-.5,rep(0,7)))
summary(mxml.s)
mxml.s %>% summary
AIC(mxml2)
AIC(mxml.s)
AIC(mxml)
mxml.ln<-gmnl(choice ~ cost + effectiveness + trout.type + proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "ln", effectiveness = "n", proximity="n", trout.type="n"),  print.init = TRUE, R=30, haltons=NA, panel=TRUE, start = c(0,-.5,rep(0,7)))
summary(mxml.ln)
BIC(mxml.ln)
mxml.ln<-gmnl(choice ~ cost + effectiveness + trout.type + proximity+ optout| 0, data=form.dat, model="mixl", ranp = c(cost = "ln", effectiveness = "ln", proximity="n", trout.type="n"),  print.init = TRUE, R=30, haltons=NA, panel=TRUE, start = c(0,-.5,rep(0,7)))
summary(mxml.ln)
BIC(mxml.ln)
BIC(mxml.s)
BIC(mxml)
BIC(smnl.nj)
BIC(smnl.nh)
remove(smnl.nh)
BIC(mxml.ln)
BIC(mxml1)
BIC(mxml)
mxml1
summary(mxml1)
summary(mxml)
mxml2.c <- gmnl(choice ~ cost + effectiveness + proximity+ trout.type + optout| 0|0| `farmer-`+`water.prox-`+`angler`+ hiker+stream.steward+`trout.risk-`+`unique.special-` +conservation.funder+ `donate.eff-`+income+rv.index+rv.frame +1 , data=form.dat, model="mixl", ranp = c(cost = "n", effectiveness = "n", proximity="n", trout.type="n"), mvar = list( proximity=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),effectiveness=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),trout.type=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" ),cost=c("`farmer-`","`water.prox-`","angler","`trout.risk-`", "`unique.special-`" ,"conservation.funder","`donate.eff-`","income" ,"rv.frame","rv.index" )), R=30, haltons=NA, panel=TRUE, correlated = TRUE)
summary(mxml2.c)
BIC(mxml2.c)
BIC(mxml2)
getwd()
load(trout_20190830)
load(trout_analysis_20190830)
load(trout_20190830.rdata)
load("trout_20190830.rdata")
load("trout_analysis_20190830.rdata")
summary(emac3u)
emac3u$formula
emac3u$time
66575.43/(60*24)
66575.43/(24)
library(gmnl)
summary(emac3u)
rm(list=ls())
getwd()
load("C:\Users\Owner\Dropbox\Trout Data Analysis\trout_analysis20190919.rdata")
load("C:/Users/Owner/dropbox/Trout Data Analysis/trout_analysis/20190919.rdata")
load("C:/Users/Owner/dropbox/Trout Data Analysis/trout_analysis20190919.rdata")
CE_question_names
dim(form.dat)
names(form.dat)
head(fdat)
apc_withinsp<-function(mod,u,df,type = c("binary","numerical", "categorical"), nested, sp,freq_in_data=FALSE){
S<- ifelse((attributes(mod)$class[1]=="brmsfit"), 4000, 1000) #brms objects predict from the entire suite of model
#draws (4000 in this case), so we'll have to use S = 4000 for the brms objects
#mod= model, u= the parameter of interest, df=dataframe, type = type of input variable of interest
df<-df[df$sp==4,]
n<-nrow(df)
newdf<-df[,c("temp1","temp2", "temp3","origin","strat","sp","loc","sfamily")] #subsetting just the observation data, nu and upsilon
if (type=="categorical"){
loc_plalan<-unique(df[[u]]) #the locations that plalan was sampled from
K=length(loc_plalan) #the number of values that u takes for plalan
u_k<-rep(loc_plalan,each=n) #This is a vector of values of u, so that each value of observation has every value of u.
#has dimensions n*K
newdf0<-newdf[rep(row.names(newdf), K),1:ncol(newdf)] #this takes the data and replicates it one time for each value of u
newdf1<-newdf0 #this is just the replicated data
newdf1[[u]]<-u_k #inserting the new values of upsilon
for (i in 1:K) {
#categorical rndm effects may be  correlated with nested rndm effects
#Here, we retain these relations:
subdf<-data.frame((newdf[newdf[u]==loc_plalan[i],nested])) #identifying which nested effects correlate
if (freq_in_data==FALSE){
subdf<- unique(subdf)
}# should we create the sample with the same
# data frequency as the data (freq_in_data=TRUE)? Or with balanced frequency (freq_in_data=FALSE)?
newdf1[((n*(i-1))+1):(n*i),nested] <- subdf[sample(nrow(subdf),n,replace=TRUE), ]
#then sampling from these with replacement, and inserting back in the alternative dataframe
}
E_u1<-posterior_predict(mod,newdata=newdf1,draws=S,seed=248) #each of these columns
#represents the expected value for a different value of nu; each set of n columns represents the expected values
# for each value of upsilon. each row represents the expected value according to a different model draw
E_u0<-posterior_predict(mod,newdata=newdf0,draws=S,seed=248) # Now the same, but for the unadulterated data
sample_draws<-sample(1:S,1000)
E_u1<-E_u1[sample_draws,]
E_u0<-E_u0[sample_draws,]
E_diff<-((E_u1-E_u0)^2)
sum_theta<-colSums(E_diff) #summing across model draws
sum_nu_u_theta<-sum(sum_theta)
num<-sum_nu_u_theta
denom<-S*n*K
APC<-(num/denom)^(1/2)
#now calculating SE:
sum_nu_u<-rowSums(E_diff)/(n*K)
apc_vec<-rep(APC^2,S) # a vector of apc
SE<-(1/(2*APC))*(sqrt(1/(S-1)*(sum  ((sum_nu_u-apc_vec)^2)  ))) #The standard error
#return(paste('APC =',APC, ', SE = ',SE))
return(data.frame("APC"=APC, "SE"=SE))
}
else {
return(paste('variable of interest must be categorical'))
}
}
## Just for PLALAN:
gr_plalan <- apc_withinsp(mod_gr, "loc", datax,type = "categorical", nested="sfamily", sp=4)
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(arm)
library(rstan)
library(rstanarm)
library(reshape2)
library(ggplot2)
library(xtable)
## load function ##
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source("germ_apc.R")
source("apc_withinsp.R")
source("apc_withinsp.R")
##################################
#### APCs for Growth Rate ####
#################################
load("C:/Users/Owner/Documents/Thesis/Stan/mod_gr.Rdata")
load("C:/Users/Owner/Documents/github/germination_stan/datax.Rdata")
gr_t3<-apc(mod_gr,"temp3", datax, type="binary")
## Just for PLALAN:
gr_plalan <- apc_withinsp(mod_gr, "loc", datax,type = "categorical", nested="sfamily", sp=4)
load("C:/Users/Owner/Documents/Thesis/Stan/mod_rate.Rdata")
load("C:/Users/Owner/Documents/github/germination_stan/rate_data.Rdata")
ge_plalan<-apc_withinsp(mod_rate, "loc", rate_data,type = "categorical", nested="sfamily", sp=4)
load("C:/Users/Owner/Documents/Thesis/Stan/mod_time_pois.Rdata")
load("C:/Users/Owner/Documents/github/germination_stan/time_data.rdata")
t_plalan<-apc_withinsp(mod_time_pois, "loc", time_data,type = "categorical", nested="sfamily", sp=4)
t_plalan
ge_plalan
gr_plalan
load("C:/Users/Owner/Documents/Thesis/Stan/mod_gr.Rdata")
load("C:/Users/Owner/Documents/github/germination_stan/datax.Rdata")
gr_o<-apc(mod_gr,"origin",datax,type = "binary")
gr_s<-apc(mod_gr,"strat",datax,type="binary")
gr_sp<-apc(mod_gr, "sp",datax,type="categorical", nested=c("loc", "sfamily"))
gr_pop <-apc(mod_gr, "loc", datax, type = "categorical", nested = c("sp", "sfamily"))
gr_t1<-apc(mod_gr,"temp1", datax, type="binary")
gr_t2<-apc(mod_gr,"temp2", datax, type="binary")
gr_t3<-apc(mod_gr,"temp3", datax, type="binary")
## Just for PLALAN:
gr_plalan <- apc_withinsp(mod_gr, "loc", datax,type = "categorical", nested="sfamily", sp=4)
###################################
### APCs for germ rate model########
###################################
load("C:/Users/Owner/Documents/Thesis/Stan/mod_rate.Rdata")
load("C:/Users/Owner/Documents/github/germination_stan/rate_data.Rdata")
ge_o<-apc(mod_rate,"origin",rate_data,type="binary")
ge_s<-apc(mod_rate,"strat",rate_data,type="binary")
ge_sp<-apc(mod_rate,"sp",rate_data,type="categorical", nested=c("loc", "sfamily"))
ge_pop <-apc(mod_rate, "loc", rate_data, type = "categorical", nested = c("sp", "sfamily"))
ge_t1<-apc(mod_rate,"temp1", rate_data,type="binary")
ge_t2<-apc(mod_rate,"temp2", rate_data,type="binary")
ge_t3<-apc(mod_rate,"temp3", rate_data,type="binary")
ge_plalan<-apc_withinsp(mod_rate, "loc", rate_data,type = "categorical", nested="sfamily", sp=4)
###################################
#### APCs for germ timing model ###
###################################
load("C:/Users/Owner/Documents/Thesis/Stan/mod_time_pois.Rdata")
load("C:/Users/Owner/Documents/github/germination_stan/time_data.rdata")
t_o<-apc(mod_time_pois,"origin",time_data,type = "binary")
t_s<-apc(mod_time_pois,"strat",time_data,type = "binary")
t_sp<-apc(mod_time_pois, "sp", time_data, type="categorical", nested = c("loc", "sfamily"))
t_pop <-apc(mod_time_pois, "loc", time_data, type = "categorical", nested = c("sp", "sfamily"))
t_t1<-apc(mod_time_pois,"temp1", time_data, type = "binary")
t_t2<-apc(mod_time_pois,"temp2", time_data, type="binary")
t_t3<-apc(mod_time_pois,"temp3", time_data, type="binary")
t_plalan<-apc_withinsp(mod_time_pois, "loc", time_data,type = "categorical", nested="sfamily", sp=4)
#################################
### Making a table #############
################################
apctable<-rbind(cbind(ge_o,ge_s,ge_t1, ge_t2, ge_t3,ge_sp, ge_pop, ge_plalan),
cbind(t_o,t_s,t_t1,t_t2,t_t3,t_sp, t_pop, t_plalan),
cbind(gr_o, gr_s, gr_t1,gr_t2,gr_t3,gr_sp, gr_pop, gr_plalan))
apctable<-round(apctable,3)
table1<-as.data.frame(rbind(
cbind(paste(apctable[1,1],"$\\pm$",apctable[1,2]),
paste(apctable[1,3], "$\\pm$",apctable[1,4]),
paste(apctable[1,5], "$\\pm$",apctable[1,6]),
paste(apctable[1,7], "$\\pm$",apctable[1,8]),
paste(apctable[1,9], "$\\pm$",apctable[1,10]),
paste(apctable[1,11], "$\\pm$",apctable[1,12]),
paste(apctable[1,13], "$\\pm$", apctable[1,14]),
paste(apctable[1,15], "$\\pm$",apctable[1,16])),
cbind(paste(apctable[2,1],"$\\pm$",apctable[2,2]),
paste(apctable[2,3], "$\\pm$",apctable[2,4]),
paste(apctable[2,5], "$\\pm$",apctable[2,6]),
paste(apctable[2,7], "$\\pm$",apctable[2,8]),
paste(apctable[2,9], "$\\pm$",apctable[2,10]),
paste(apctable[2,11], "$\\pm$",apctable[2,12]),
paste(apctable[2,13], "$\\pm$", apctable[2,14]),
paste(apctable[2,15], "$\\pm$",apctable[2,16])),
cbind(paste(apctable[3,1],"$\\pm$",apctable[3,2]),
paste(apctable[3,3], "$\\pm$",apctable[3,4]),
paste(apctable[3,5], "$\\pm$",apctable[3,6]),
paste(apctable[3,7], "$\\pm$",apctable[3,8]),
paste(apctable[3,9], "$\\pm$",apctable[3,10]),
paste(apctable[3,11], "$\\pm$",apctable[3,12]),
paste(apctable[3,13], "$\\pm$", apctable[3,14]),
paste(apctable[1,15], "$\\pm$",apctable[1,16]))
))
names(table1)<-c("origin", "stratification", "temperature 1", "temperature 2","temperature 3",
"species", "population", "PLALAN population")
row.names(table1)<-c("germination rate (%)", "germination date (days)", "growth rate (cm/day)")
table_t<-t(table1)
print(xtable(table_t),tabular.environment = "longtable",include.rownames = TRUE, floating = FALSE,
sanitize.text.function = identity)
setwd("C:/Users/Owner/Documents/github/germination_stan")
table1<-as.data.frame(rbind(
cbind(paste(apctable[1,1],"$\\pm$",apctable[1,2]),
paste(apctable[1,3], "$\\pm$",apctable[1,4]),
paste(apctable[1,5], "$\\pm$",apctable[1,6]),
paste(apctable[1,7], "$\\pm$",apctable[1,8]),
paste(apctable[1,9], "$\\pm$",apctable[1,10]),
paste(apctable[1,11], "$\\pm$",apctable[1,12]),
paste(apctable[1,13], "$\\pm$", apctable[1,14]),
paste(apctable[1,15], "$\\pm$",apctable[1,16])),
cbind(paste(apctable[2,1],"$\\pm$",apctable[2,2]),
paste(apctable[2,3], "$\\pm$",apctable[2,4]),
paste(apctable[2,5], "$\\pm$",apctable[2,6]),
paste(apctable[2,7], "$\\pm$",apctable[2,8]),
paste(apctable[2,9], "$\\pm$",apctable[2,10]),
paste(apctable[2,11], "$\\pm$",apctable[2,12]),
paste(apctable[2,13], "$\\pm$", apctable[2,14]),
paste(apctable[2,15], "$\\pm$",apctable[2,16])),
cbind(paste(apctable[3,1],"$\\pm$",apctable[3,2]),
paste(apctable[3,3], "$\\pm$",apctable[3,4]),
paste(apctable[3,5], "$\\pm$",apctable[3,6]),
paste(apctable[3,7], "$\\pm$",apctable[3,8]),
paste(apctable[3,9], "$\\pm$",apctable[3,10]),
paste(apctable[3,11], "$\\pm$",apctable[3,12]),
paste(apctable[3,13], "$\\pm$", apctable[3,14]),
paste(apctable[3,15], "$\\pm$",apctable[3,16]))
))
names(table1)<-c("origin", "stratification", "temperature 1", "temperature 2","temperature 3",
"species", "population", "PLALAN population")
row.names(table1)<-c("germination rate (%)", "germination date (days)", "growth rate (cm/day)")
table_t<-t(table1)
print(xtable(table_t),tabular.environment = "longtable",include.rownames = TRUE, floating = FALSE,
sanitize.text.function = identity)
unique(datax$sp)
## Just for PLALAN:
gr_withinsp_apc<-matrix(nrow=7, ncol=2)
i
i=1
gr_withinsp_apc[i,] <- apc_withinsp(mod_gr, "loc", datax,type = "categorical", nested="sfamily", sp=i)
gr_withinsp_apc
gr_plalan
for (i in 1:7){
gr_withinsp_apc[i,] <- apc_withinsp(mod_gr, "loc", datax,type = "categorical", nested="sfamily", sp=i)
}
i
## now looping across all species:
gr_withinsp_apc<-data.frame()
gr_plalan
## now looping across all species:
gr_withinsp_apc<-data.frame()
for (i in 1:7){
a <- apc_withinsp(mod_gr, "loc", datax,type = "categorical", nested="sfamily", sp=i)
gr_withinsp_apc = rbind(gr_withinsp_apc, a)
}
a
gr_withinsp_apc
sp
i
mod=mod_gr
df=datax
sp=1
nested="sfamily"
S=1000
#draws (4000 in this case), so we'll have to use S = 4000 for the brms objects
#mod= model, u= the parameter of interest, df=dataframe, type = type of input variable of interest
df<-df[df$sp==sp,]
df
dim(df)
n<-nrow(df)
newdf<-df[,c("temp1","temp2", "temp3","origin","strat","sp","loc","sfamily")] #subsetting just the observation data, nu and upsilon
loc_plalan<-unique(df[[u]]) #the locations that plalan was sampled from
u="loc"
loc_plalan<-unique(df[[u]]) #the locations that plalan was sampled from
K=length(loc_plalan) #the number of values that u takes for plalan
K
loc_plalan
u_k<-rep(loc_plalan,each=n) #This is a vector of values of u, so that each value of observation has every value of u.
#has dimensions n*K
newdf0<-newdf[rep(row.names(newdf), K),1:ncol(newdf)] #this takes the data and replicates it one time for each value of u
newdf1<-newdf0 #this is just the replicated data
newdf1[[u]]<-u_k #inserting the new values of upsilon
for (i in 1:K) {
#categorical rndm effects may be  correlated with nested rndm effects
#Here, we retain these relations:
subdf<-data.frame((newdf[newdf[u]==loc_plalan[i],nested])) #identifying which nested effects correlate
if (freq_in_data==FALSE){
subdf<- unique(subdf)
}# should we create the sample with the same
# data frequency as the data (freq_in_data=TRUE)? Or with balanced frequency (freq_in_data=FALSE)?
newdf1[((n*(i-1))+1):(n*i),nested] <- subdf[sample(nrow(subdf),n,replace=TRUE), ]
#then sampling from these with replacement, and inserting back in the alternative dataframe
}
freq_in_data=FALSE
for (i in 1:K) {
#categorical rndm effects may be  correlated with nested rndm effects
#Here, we retain these relations:
subdf<-data.frame((newdf[newdf[u]==loc_plalan[i],nested])) #identifying which nested effects correlate
if (freq_in_data==FALSE){
subdf<- unique(subdf)
}# should we create the sample with the same
# data frequency as the data (freq_in_data=TRUE)? Or with balanced frequency (freq_in_data=FALSE)?
newdf1[((n*(i-1))+1):(n*i),nested] <- subdf[sample(nrow(subdf),n,replace=TRUE), ]
#then sampling from these with replacement, and inserting back in the alternative dataframe
}
E_u1<-posterior_predict(mod,newdata=newdf1,draws=S,seed=248) #each of these columns
#represents the expected value for a different value of nu; each set of n columns represents the expected values
# for each value of upsilon. each row represents the expected value according to a different model draw
E_u0<-posterior_predict(mod,newdata=newdf0,draws=S,seed=248) # Now the same, but for the unadulterated data
sample_draws<-sample(1:S,1000)
E_u1<-E_u1[sample_draws,]
E_u0<-E_u0[sample_draws,]
E_diff<-((E_u1-E_u0)^2)
sum_theta<-colSums(E_diff) #summing across model draws
sum_nu_u_theta<-sum(sum_theta)
num<-sum_nu_u_theta
denom<-S*n*K
APC<-(num/denom)^(1/2)
#now calculating SE:
sum_nu_u<-rowSums(E_diff)/(n*K)
apc_vec<-rep(APC^2,S) # a vector of apc
SE<-(1/(2*APC))*(sqrt(1/(S-1)*(sum  ((sum_nu_u-apc_vec)^2)  ))) #The standard error
#return(paste('APC =',APC, ', SE = ',SE))
return(data.frame("APC"=APC, "SE"=SE))
APC
SE
gr_withinsp_apc
rm(list=ls())
options(stringsAsFactors = FALSE)
library(dplyr)
library(arm)
library(rstan)
library(rstanarm)
library(reshape2)
library(ggplot2)
library(xtable)
## load function ##
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source("germ_apc.R")
source("apc_withinsp.R")
##################################
#### APCs for Growth Rate ####
#################################
load("C:/Users/Owner/Documents/Thesis/Stan/mod_gr.Rdata")
load("C:/Users/Owner/Documents/github/germination_stan/datax.Rdata")
## Just for PLALAN:
gr_plalan <- apc_withinsp(mod_gr, "loc", datax,type = "categorical", nested="sfamily", sp=4)
## now looping across all species:
gr_withinsp_apc<-data.frame()
for (i in 1:7){
a <- apc_withinsp(mod_gr, "loc", datax,type = "categorical", nested="sfamily", sp=i)
gr_withinsp_apc = rbind(gr_withinsp_apc, a)
}
gr_withinsp_apc
