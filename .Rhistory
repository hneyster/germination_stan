remove.packages("rstan"
)
system.file("libs", package = "rstan")
install.packages("rstan")
Stan_Version()
Stan_version()
stan_version()
library(rstan)
rstan::stan_version()
remove.packages("brms")
system.file("libs", package = "brms")
install.packages("brms")
system.file("libs",package="brms")
install.packages("brms")
## housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
options(mc.cores = parallel::detectCores())
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
##libraries
library(plyr)
library(rstan)
library(brms)
load("germs.Rdata") #cleaned and processed real data
germs.y<-(subset(germs,
germinated==1 &
sp!="PLAMED" &  sp!="PLACOR"))    #just the data from seeds that germianted, and taking out the congenerics
data<-germs.y
nseed<-length(unique(data$uniqueid)) #1205 unique seeds
N<-nseed
y<-data$daysfromstart    # dependent variable
log_y=log(y)
temp1<-ifelse(data$temp==16.0, 1, 0) #coding temperature as binary dummy variables
temp2<-ifelse(data$temp==20.7, 1, 0)
temp3<-ifelse(data$temp==25.3,1, 0)
strat<-ifelse(data$strat==30,0,1)
origin<-ifelse(data$origin=="Europe", 0, 1)
intercept<-rep(1, nrow(data))
#setting up to random effects data:
nsp<-length(unique(germs.y$sp))
sp_alph<-data$sp
sp<-ifelse (sp_alph=="CAPBUR", 1,     #making sp numeric, in alphabetical order
ifelse(sp_alph=="CHEMAJ",2,
ifelse(sp_alph=="DACGLO", 3,
ifelse(sp_alph=="PLALAN", 4,
ifelse(sp_alph=="PLAMAJ", 5,
ifelse(sp_alph=="RUMCRI", 6, 7))))))
loc<-as.numeric(as.factor(data$loc))
sfamily<-as.numeric(as.factor(data$uniqind))
nsp <- length(unique(data$sp))
##setting up censored data. Plants were not measured every day -- thus the germination timing data is censored. For
#example, and observation of germiantion onf day 12 could have occued on day 11 or day 12, since the plot was
#not measured since day 10. brms allows for censored data. To fit the syntax of brms, we must first add a column,
#"censored" which tells weather the associated response observation is censored. A '2' in this column represents
#@that the response observation is censored on an interval. All of our data is thus censored, so we'll fill this column
#with twos
censored<-as.numeric(rep(2,N))
#Next, we have to represent what interval each observation is censored on. In brms, this interval is open on the left
#and closed on the right. THe right bound is called "y2" and the left bound is called "y". Thus y2=the y defined above:
y2<-y
#We will redefine y as the the lower, open bound. Because this bound is open, it will be the last observed date (when
#the seed was still ungerminated). Here are the days that observations occurred:
obdays<-c(2,sort(unique(y2))) #the first observation was carried out on day 2, but no germinations was recorded. All
#other days had germination days recorded.
prev_ob<-c(0,obdays[1:(length(obdays)-1)]) #this is the prior observation date
prev_cur<-as.data.frame(cbind("y"=prev_ob,"y2"=obdays))
y_y2<-join(x = as.data.frame(y2),y=prev_cur)
y<-y_y2$y
#putting all the data together:
datax <- data.frame(N=N, log_y=log_y, y,y2,censored, temp1=temp1, temp2=temp2, temp3=temp3 ,origin=origin, strat=strat,
nsp=nsp, sp=sp, loc=loc, sfamily=sfamily)
#,nloc=nloc, nfamily=nfamily, loc=loc, family=family)
#time_data<-datax
#save(time_data,file="time_data.rdata")
germdata=datax
#and finally, a censored model (4/25/19)
cens_forumla<-bf(y|cens(censored, y2) ~
origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3 +
(1|sp/loc/sfamily) +
(origin -1|sp/loc/sfamily) + (strat -1|sp/loc/sfamily) + (temp1 -1|sp/loc/sfamily) +
(temp2 -1|sp/loc/sfamily) +  (temp3 -1|sp/loc/sfamily)+
(origin:strat -1|sp/loc/sfamily) + (origin:temp1 -1|sp/loc/sfamily) + (origin:temp2 -1|sp/loc/sfamily) +
(origin:temp3 -1|sp/loc/sfamily) +  (strat:temp1 -1|sp/loc/sfamily) + (strat:temp2 -1|sp/loc/sfamily) +
(strat:temp3 -1|sp/loc/sfamily) + (origin:strat:temp1 -1|sp/loc/sfamily) +
(origin:strat:temp2 -1|sp/loc/sfamily) + (origin:strat:temp3 -1|sp/loc/sfamily))
mod_time_pois_brm_cens<-brm(cens_forumla,
data=germdata, algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept"),
prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=4, iter=200)
apply(germdata,2,min)
#and finally, a censored model (4/25/19)
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3 +
(1|sp/loc/sfamily) +
(origin -1|sp/loc/sfamily) + (strat -1|sp/loc/sfamily) + (temp1 -1|sp/loc/sfamily) +
(temp2 -1|sp/loc/sfamily) +  (temp3 -1|sp/loc/sfamily)+
(origin:strat -1|sp/loc/sfamily) + (origin:temp1 -1|sp/loc/sfamily) + (origin:temp2 -1|sp/loc/sfamily) +
(origin:temp3 -1|sp/loc/sfamily) +  (strat:temp1 -1|sp/loc/sfamily) + (strat:temp2 -1|sp/loc/sfamily) +
(strat:temp3 -1|sp/loc/sfamily) + (origin:strat:temp1 -1|sp/loc/sfamily) +
(origin:strat:temp2 -1|sp/loc/sfamily) + (origin:strat:temp3 -1|sp/loc/sfamily)
data=germdata, algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept"),
prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=4, iter=200)
#and finally, a censored model (4/25/19)
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3 +
(1|sp/loc/sfamily) +
(origin -1|sp/loc/sfamily) + (strat -1|sp/loc/sfamily) + (temp1 -1|sp/loc/sfamily) +
(temp2 -1|sp/loc/sfamily) +  (temp3 -1|sp/loc/sfamily)+
(origin:strat -1|sp/loc/sfamily) + (origin:temp1 -1|sp/loc/sfamily) + (origin:temp2 -1|sp/loc/sfamily) +
(origin:temp3 -1|sp/loc/sfamily) +  (strat:temp1 -1|sp/loc/sfamily) + (strat:temp2 -1|sp/loc/sfamily) +
(strat:temp3 -1|sp/loc/sfamily) + (origin:strat:temp1 -1|sp/loc/sfamily) +
(origin:strat:temp2 -1|sp/loc/sfamily) + (origin:strat:temp3 -1|sp/loc/sfamily),
data=germdata, algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept"),
prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=4, iter=200)
#and finally, a censored model (4/25/19)
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3 +
(1|sp/loc/sfamily) +
(origin -1|sp/loc/sfamily) + (strat -1|sp/loc/sfamily) + (temp1 -1|sp/loc/sfamily) +
(temp2 -1|sp/loc/sfamily) +  (temp3 -1|sp/loc/sfamily)+
(origin:strat -1|sp/loc/sfamily) + (origin:temp1 -1|sp/loc/sfamily) + (origin:temp2 -1|sp/loc/sfamily) +
(origin:temp3 -1|sp/loc/sfamily) +  (strat:temp1 -1|sp/loc/sfamily) + (strat:temp2 -1|sp/loc/sfamily) +
(strat:temp3 -1|sp/loc/sfamily) + (origin:strat:temp1 -1|sp/loc/sfamily) +
(origin:strat:temp2 -1|sp/loc/sfamily) + (origin:strat:temp3 -1|sp/loc/sfamily),
data=germdata, algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept"),
prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=4, iter=200,inits = 0)
#and finally, a censored model (4/25/19)
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3 +
(1|sp/loc/sfamily) +
(origin -1|sp/loc/sfamily) + (strat -1|sp/loc/sfamily) + (temp1 -1|sp/loc/sfamily) +
(temp2 -1|sp/loc/sfamily) +  (temp3 -1|sp/loc/sfamily)+
(origin:strat -1|sp/loc/sfamily) + (origin:temp1 -1|sp/loc/sfamily) + (origin:temp2 -1|sp/loc/sfamily) +
(origin:temp3 -1|sp/loc/sfamily) +  (strat:temp1 -1|sp/loc/sfamily) + (strat:temp2 -1|sp/loc/sfamily) +
(strat:temp3 -1|sp/loc/sfamily) + (origin:strat:temp1 -1|sp/loc/sfamily) +
(origin:strat:temp2 -1|sp/loc/sfamily) + (origin:strat:temp3 -1|sp/loc/sfamily),
data=germdata, algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept"),
prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
mod_time_pois_brm_cens$formula
stancode(mod_time_pois_brm_cens)
#and finally, a censored model (4/25/19)
#first trying a simple one:
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3,
data=germdata, algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept"),
prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
#and finally, a censored model (4/25/19)
#first trying a simple one:
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
#and finally, a censored model (4/25/19)
#first trying a simple one:
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3,
data=germdata, algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept")),
#prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
#and finally, a censored model (4/25/19)
#first trying a simple one:
mod_time_pois_brm_cens<-brm(y2 ~
origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3,
data=germdata, algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept")),
#prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
View(germdata)
sort(unique(y2))
y<y2
#and finally, a censored model (4/25/19)
#first trying a simple one:
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
origin,
data=germdata, algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept")),
#prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
#and finally, a censored model (4/25/19)
#first trying a simple one:
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
origin,
data=germdata, algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept")),
#prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = .1)
#and finally, a censored model (4/25/19)
#first trying a simple one:
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
origin,
data=germdata, algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept")),
#prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
stancode(mod_time_pois_brm_cens)
#and finally, a censored model (4/25/19)
#first trying a simple one:
xvar<-(y/5+2)
head(xvar)
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
xvar ,
data=cbind(germdata,xvar), algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept")),
#prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
#and finally, a censored model (4/25/19)
#first trying a simple one:
germdata$censored<-ifelse(germdata$y2>30,2,0)
head(germdata)
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
xvar ,
data=cbind(germdata,xvar), algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept")),
#prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
View(germdata)
germdata$censored<-2
head(germdata)
germdata$censored<-0
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
xvar ,
data=cbind(germdata,xvar), algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept")),
#prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
head(germdata)
germdata$censored[1]<-2
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
xvar ,
data=cbind(germdata,xvar), algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept")),
#prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
stancode(mod_time_pois_brm_cens)
germdata$censored[1]<-0
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
xvar ,
data=cbind(germdata,xvar), algorithm= "sampling", family=poisson,
prior = c(prior(normal(0, 10), "Intercept")),
#prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
stancode(mod_time_pois_brm_cens)
summary(mod_time_pois_brm_cens)
germdata$censored[1]<-2
mod_time_pois_brm_cens<-brm(y|cens(censored, y2) ~
xvar ,
data=cbind(germdata,xvar), algorithm= "sampling", family=poisson,
prior = c(prior(normal(1, .5), "Intercept")),
#prior(cauchy(0, 10), "sd")),
control = list(adapt_delta = 0.95), chains=1, iter=200,inits = 0)
