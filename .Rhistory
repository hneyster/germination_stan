summary(mod)
plot(week, Total.Precip..mm.)
plot(week, Total.Precip..mm., data=data)
plot(data$week, data$Total.Precip..mm.)
mod<-lm(Total.Precip..mm. ~ (week), data=data)
summary(mod)
data$week<-c(rep(6,7,rep(1:7,52))
mod<-lm(Total.Precip..mm. ~ (week), data=data)
plot(data$week, data$Total.Precip..mm.)
data$week
data$week<-c(6,7,(rep(1:7,52)))
mod<-lm(Total.Precip..mm. ~ (week), data=data)
plot(data$week, data$Total.Precip..mm.)
summary(mod)
mod<-lm(Total.Precip..mm. ~ as.factor(week), data=data)
summary(mod)
abline(5.14, .227)
ifelse(data$week==6, 7, data$week)
data$week<-c(6,7,(rep(1:7,52)))
ifelse(data$week==7, 1, data$week)
mod<-lm(Total.Precip..mm. ~ as.factor(week), data=data)
summary(mod)
plot(data$week, data$Total.Precip..mm.)
ifelse(data$week==7, 1, data$week)
plot(data$week, data$Total.Precip..mm.)
abline(5.14, .227)
data$week<-ifelse(data$week==7, 1, data$week)
mod<-lm(Total.Precip..mm. ~ as.factor(week), data=data)
plot(data$week, data$Total.Precip..mm.)
mod<-lm(Total.Precip..mm. ~ (week), data=data)
data$week<-ifelse(data$week==7, 1, 2)
data$week<-c(6,7,(rep(1:7,52)))
data$week<-ifelse(data$week==7, 1, 2)
mod<-lm(Total.Precip..mm. ~ (week), data=data)
summary(mod)
plot(data$week, data$Total.Precip..mm.)
abline(5.14, -..44)
abline(5.14, -.44)
qqplot(mod)
qqpnorm(mod)
qqnorm(mod)
mean(Total.Precip..mm.,data=subset(data, data$week==1))
mean(subset(data, data$week==1)$Total.Precip..mm.)
mean(subset(data, data$week==1)$Total.Precip..mm., na.rm=TRUE)
mean(subset(data, data$week==2)$Total.Precip..mm., na.rm=TRUE)
data$week<-c(6,7,(rep(1:7,52)))
data$week<-ifelse(data$week==7|6, 1, 2)
mean(subset(data, data$week==2)$Total.Precip..mm., na.rm=TRUE)
data$week
data$week<-ifelse(data$week==7||6, 1, 2)
data$week
data$week<-ifelse(data$week==7 && 6, 1, 2)
data$week
data$week<-c(6,7,(rep(1:7,52)))
data$week<-ifelse(data$week==7, 1, ifelse(data$week==1, 2)
data$week<-ifelse(data$week==7, 1, ifelse(data$week==1, 2)
)
data$week<-ifelse(data$week==7, 1, ifelse(data$week==1, 2))
data$week<-ifelse(data$week==7, 1, (ifelse(data$week==1, 2)))
data$week<-ifelse(data$week==7, 1, (ifelse(data$week==1, 1, 2)))
data$week
mod<-lm(Total.Precip..mm. ~ (week), data=data)
plot(data$week, data$Total.Precip..mm.)
summary(mod)
abline(5.64, -.404)
mean(subset(data, data$week==2)$Total.Precip..mm., na.rm=TRUE)
mean(subset(data, data$week==1)$Total.Precip..mm., na.rm=TRUE)
View(data)
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month=! c(5,6,7,8))
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month=! c(5,6,7,8)))
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month!= c(5,6,7,8)))
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month== c(1,2,3,4,9,10,11,12)))
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month== 1 || 2 || 3 || 4 || 9 || 10 || 11 || 12)))
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month== 1 || 2 || 3 || 4 || 9 || 10 || 11 || 12))
summary(mod)
mean(subset(data, data$week==1 & data$month==1 || 2 || 3 || 4 || 9 || 10 || 11 || 12)$Total.Precip..mm., na.rm=TRUE)
mean(subset(data, data$week==2 & data$month==1 || 2 || 3 || 4 || 9 || 10 || 11 || 12)$Total.Precip..mm., na.rm=TRUE)
subset(data, data$week==2 & data$month==1 || 2 || 3 || 4 || 9 || 10 || 11 || 12)$Total.Precip..mm., na.rm=TRUE
mean(subset(data, data$week==2 & data$month==1)$Total.Precip..mm., na.rm=TRUE)
View(data)
mean(subset(data, data$week==2 && data$month==1)$Total.Precip..mm., na.rm=TRUE)
mean(subset(data, data$week==2 && data$month==2)$Total.Precip..mm., na.rm=TRUE)
mean(subset(data, data$week==2 && as.numeric(data$month)==2)$Total.Precip..mm., na.rm=TRUE)
mean(subset(data, data$week==2)$Total.Precip..mm., na.rm=TRUE)
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month==1))
mod<-lm(Total.Precip..mm. ~ (week), data=data)
data$rain<- ifelse(data$Total.Precip..mm.<=1, 0, 1)
mod1<-glm(Total.Precip..mm. ~ (week), family=logit, data=data)
mod1<-glm(Total.Precip..mm. ~ (week), family=binomial, link=logit, data=data)
?glm
mod1<-glm(Total.Precip..mm. ~ (week), family=binomial (link="logit"), data=data)
mod1<-glm(rain ~ (week), family=binomial (link="logit"), data=data)
summary(mod1)
plot(data$week, data$rain)
plot(data$week, data$rain, pch=15)
plot(data$week, data$rain, pch=30)
plot(data$rain ~ jitter(data$rain, 1))
plot(data$rain ~ jitter(data$rain, 2))
mean(subset(data, data$week==2)$rain, na.rm=TRUE)
mean(subset(data, data$week==1)$rain, na.rm=TRUE)
plot(data$rain ~ jitter(data$rain, .5))
plot(data$rain ~ jitter(data$rain,0))
plot(data$rain ~ jitter(data$week,1))
plot(jitter(data$rain,1) ~ jitter(data$week,1))
abline(.245, -.287)
mod2<-lm(Total.Precip..mm. ~ (week), data=data, family=poisson(link="log"))
mod2<-glm(Total.Precip..mm. ~ (week), data=data, family=poisson(link="log"))
warnings()
mod2<-glm(log(Total.Precip..mm.) ~ (week), data=data)
log(0)
library(rstanarm)
mod2<-rstanarm.glm((Total.Precip..mm.) ~ (week), data=data)
mod2<-stan_glm((Total.Precip..mm.) ~ (week), data=data)
my_sso <- launch_shinystan(mod2, rstudio = getOption("shinystan.rstudio"))
mod3<-stan_glm(rain~week, family=binomial(link="logit"), data=data)
my_sso <- launch_shinystan(mod3, rstudio = getOption("shinystan.rstudio"))
save(fake, file="Fake_germdata_bigcoeff.RData")
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/undergrads/harold/analyses/germination_stan")
} else
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
library("dplyr")
nloc = 16
nsp = 7
nfamily = 80
nind=1205
norigin = 2 # origin ==1 is Europe
ntemp = 4
nstrat = 2
rep = round((nind/(norigin*norigin*ntemp*nsp)), digits=0) # = 11
(ntot = norigin*ntemp*nstrat*rep) #  176 rows
temp = gl(ntemp, rep, length = ntot)
origin = as.numeric(as.character(gl(norigin, rep*ntemp, length = ntot, labels=c(0,1))))
strat = as.numeric(as.character(gl(nstrat, rep*ntemp*norigin, length = ntot, c(0,1))))
temp1<-ifelse(temp == 2, 1, 0)
temp2<-ifelse(temp == 3, 1, 0)
temp3<-ifelse(temp == 4, 1, 0)
treatcombo = paste(temp1, temp2, temp3, origin, strat, sep = "_")
(d <- data_frame(temp1, temp2, temp3, origin, strat, treatcombo))
tempdiff1 = 1.5 #logged days earlier from 1 to 2
tempdiff2= -1 #logged days earlier from 2 to 3
tempdiff3= 2 #logged days earlier from 3 to 4
origindiff = 1.9
stratdiff = 1
tempdiff.sd = 0.1
origindiff.sd = 0.1
stratdiff.sd = 0.1
temporigin1 = -1
temporigin2 = -2
temporigin3 = -3
tempstrat1 = -2
tempstrat2 = -1
tempstrat3 = -2
originstrat = -3 #
origintempstrat1 = 3
origintempstrat2 = 3
origintempstrat3 = 3
temporigin.sd = 0.2 #
tempstrat.sd = 0.1 #
originstrat.sd = 0.24 #
origintempstrat.sd = 0.1
mm <- model.matrix(~(temp1+temp2+temp3+origin+strat)^3, data.frame(temp, origin, strat))
mm<-mm[,-grep("temp1:temp2",colnames(mm))]
mm<-mm[,-grep("temp1:temp3", colnames(mm))]
mm<-mm[,-grep("temp2:temp3",colnames(mm))]
colnames(mm)
baseinter = 2.48 # baseline intercept across all species
spint <- baseinter + (c(1:nsp)-mean(1:nsp))/2 # different intercepts by species. 7 species
fake <- vector()
cc<- data_frame()
set.seed(100) #so that the created random coefficients can be compared to modeled coefficients
for(i in 1:nsp){ # loop over species. i = 1
# Give species different difference values, drawn from normal.
coeff <- c(spint[i],
rnorm(1, tempdiff1, tempdiff.sd),
rnorm(1, tempdiff2, tempdiff.sd),
rnorm(1, tempdiff3, tempdiff.sd),
rnorm(1, origindiff, origindiff.sd),
rnorm(1, stratdiff, stratdiff.sd),
rnorm(1, temporigin1, temporigin.sd),
rnorm(1, tempstrat1, tempstrat.sd),
rnorm(1, temporigin2, temporigin.sd),
rnorm(1, tempstrat2, tempstrat.sd),
rnorm(1, temporigin3, temporigin.sd),
rnorm(1, tempstrat3, tempstrat.sd),
rnorm(1, originstrat, originstrat.sd),
rnorm(1, origintempstrat1, origintempstrat.sd),
rnorm(1, origintempstrat2, origintempstrat.sd),
rnorm(1, origintempstrat3, origintempstrat.sd)
)
bb <- rnorm(n = length(temp), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(log_y=bb, sp = i,
temp1, temp2, temp3, origin, strat)
fake <- rbind(fake, fakex)
cc<-rbind(cc, coeff) #to track randomly generated coefficients
}
summary(lm(log_y ~
origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 +
(1|sp), data = fake))
save(fake, file="Fake_germdata_bigcoeff.RData")
rm(list=ls())
options(stringsAsFactors = FALSE)
options(shinystan.rstudio = TRUE)
options(mc.cores = parallel::detectCores())
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/undergrads/harold/analyses/germination_stan")
} else
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
library(rstan)
library(shinystan)
library(ggplot2)
library(rstanarm)
runstan=TRUE      # set to true if running the stan model
realdata=FALSE    # set to true to run on real data
if (realdata==TRUE) {
# Setting up the  real data  for the Stan model-----------------
load("germs.Rdata") #cleaned and processed real data
germs.y<-(subset(germs,
germinated==1 &
sp!="PLAMED" &  sp!="PLACOR"))    #just the data from seeds that germianted, and taking out the congenerics
data<-germs.y
nseed<-length(unique(data$uniqueid)) #1205 unique seeds
N<-nseed
y<-data$daysfromstart    # dependent variable
log_y=log(y)
temp1<-ifelse(data$temp==16.0, 1, 0) #coding temperature as binary dummy variables
temp2<-ifelse(data$temp==20.7, 1, 0)
temp3<-ifelse(data$temp==25.3,1, 0)
strat<-ifelse(data$strat==30,0,1)
origin<-ifelse(data$origin=="Europe", 0, 1)
intercept<-rep(1, nrow(data))
#setting up to random effects data:
nsp<-length(unique(germs.y$sp))
sp_alph<-data$sp
sp<-ifelse (sp_alph=="CAPBUR", 1,     #making sp numeric, in alphabetical order
ifelse(sp_alph=="CHEMAJ",2,
ifelse(sp_alph=="DACGLO", 3,
ifelse(sp_alph=="PLALAN", 4,
ifelse(sp_alph=="PLAMAJ", 5,
ifelse(sp_alph=="RUMCRI", 6, 7))))))
nsp <- length(unique(data$sp))
#putting all the data together:
datax <- list(N=N, log_y=log_y, temp1=temp1, temp2=temp2, temp3=temp3 ,origin=origin, strat=strat,  nsp=nsp, sp=sp)
#,nloc=nloc, nfamily=nfamily, loc=loc, family=family)
}
load("Fake_germdata_bigcoeff.RData")
germdata<-list(log_y=fake$log_y, temp1=as.numeric(fake$temp1),temp2=as.numeric(fake$temp2),
temp3=as.numeric(fake$temp3), origin=as.numeric(fake$origin),
strat=as.numeric(fake$strat), N=nrow(fake),sp=as.numeric(fake$sp),
nsp=length(unique(fake$sp)))}
{load("Fake_germdata_bigcoeff.RData")
germdata<-list(log_y=fake$log_y, temp1=as.numeric(fake$temp1),temp2=as.numeric(fake$temp2),
temp3=as.numeric(fake$temp3), origin=as.numeric(fake$origin),
strat=as.numeric(fake$strat), N=nrow(fake),sp=as.numeric(fake$sp),
nsp=length(unique(fake$sp)))}
mod_spint<-stan_lmer(log_y ~ origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 + (1|sp),
data=germdata, algorithm= "sampling",
prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5)) # by default, creates four chains with 1000 warmup, and 1000 samling
my_sso <- launch_shinystan(mod_spint, rstudio = getOption("shinystan.rstudio"))
library("dplyr")
nloc = 16
nsp = 7
nfamily = 80
nind=1205
norigin = 2 # origin ==1 is Europe
ntemp = 4
nstrat = 2
rep = round((nind/(norigin*norigin*ntemp*nsp)), digits=0) # = 11
(ntot = norigin*ntemp*nstrat*rep) #  176 rows
temp = gl(ntemp, rep, length = ntot)
origin = as.numeric(as.character(gl(norigin, rep*ntemp, length = ntot, labels=c(0,1))))
strat = as.numeric(as.character(gl(nstrat, rep*ntemp*norigin, length = ntot, c(0,1))))
temp1<-ifelse(temp == 2, 1, 0)
temp2<-ifelse(temp == 3, 1, 0)
temp3<-ifelse(temp == 4, 1, 0)
treatcombo = paste(temp1, temp2, temp3, origin, strat, sep = "_")
(d <- data_frame(temp1, temp2, temp3, origin, strat, treatcombo))
tempdiff1 = 0.01 #logged days earlier from 1 to 2
tempdiff2= -0.01 #logged days earlier from 2 to 3
tempdiff3= 0.02 #logged days earlier from 3 to 4
origindiff = 0.9
stratdiff = 0.01
tempdiff.sd = 0.014
origindiff.sd = 0.4
stratdiff.sd = 0.005
temporigin1 = -0.07
temporigin2 = -0.02
temporigin3 = -0.09
tempstrat1 = -0.002
tempstrat2 = -0.001
tempstrat3 = -0.0025
originstrat = -0.022 #
origintempstrat1 = 0.005
origintempstrat2 = 0.001
origintempstrat3 = 0.005
temporigin.sd = 0.021 #
tempstrat.sd = 0.0003 #
originstrat.sd = 0.0004 #
origintempstrat.sd = 0.001
mm <- model.matrix(~(temp1+temp2+temp3+origin+strat)^3, data.frame(temp, origin, strat))
mm<-mm[,-grep("temp1:temp2",colnames(mm))]
mm<-mm[,-grep("temp1:temp3", colnames(mm))]
mm<-mm[,-grep("temp2:temp3",colnames(mm))]
colnames(mm)
baseinter = 2.48 # baseline intercept across all species
spint <- baseinter + (c(1:nsp)-mean(1:nsp))/2 # different intercepts by species. 7 species
fake <- vector()
cc<- data_frame()
set.seed(100) #so that the created random coefficients can be compared to modeled coefficients
coeff <- c(spint[i],
rnorm(1, tempdiff1, tempdiff.sd),
rnorm(1, tempdiff2, tempdiff.sd),
rnorm(1, tempdiff3, tempdiff.sd),
rnorm(1, origindiff, origindiff.sd),
rnorm(1, stratdiff, stratdiff.sd),
rnorm(1, temporigin1, temporigin.sd),
rnorm(1, tempstrat1, tempstrat.sd),
rnorm(1, temporigin2, temporigin.sd),
rnorm(1, tempstrat2, tempstrat.sd),
rnorm(1, temporigin3, temporigin.sd),
rnorm(1, tempstrat3, tempstrat.sd),
rnorm(1, originstrat, originstrat.sd),
rnorm(1, origintempstrat1, origintempstrat.sd),
rnorm(1, origintempstrat2, origintempstrat.sd),
rnorm(1, origintempstrat3, origintempstrat.sd)
)
for(i in 1:nsp){ # loop over species. i = 1
# Give species different difference values, drawn from normal.
coeff <- c(spint[i],
rnorm(1, tempdiff1, tempdiff.sd),
rnorm(1, tempdiff2, tempdiff.sd),
rnorm(1, tempdiff3, tempdiff.sd),
rnorm(1, origindiff, origindiff.sd),
rnorm(1, stratdiff, stratdiff.sd),
rnorm(1, temporigin1, temporigin.sd),
rnorm(1, tempstrat1, tempstrat.sd),
rnorm(1, temporigin2, temporigin.sd),
rnorm(1, tempstrat2, tempstrat.sd),
rnorm(1, temporigin3, temporigin.sd),
rnorm(1, tempstrat3, tempstrat.sd),
rnorm(1, originstrat, originstrat.sd),
rnorm(1, origintempstrat1, origintempstrat.sd),
rnorm(1, origintempstrat2, origintempstrat.sd),
rnorm(1, origintempstrat3, origintempstrat.sd)
)
bb <- rnorm(n = length(temp), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(log_y=bb, sp = i,
temp1, temp2, temp3, origin, strat)
fake <- rbind(fake, fakex)
cc<-rbind(cc, coeff) #to track randomly generated coefficients
}
coeff
bb
16*7
nsp
coeff <- c(spint[1],
rnorm(1, tempdiff1, tempdiff.sd),
rnorm(1, tempdiff2, tempdiff.sd),
rnorm(1, tempdiff3, tempdiff.sd),
rnorm(1, origindiff, origindiff.sd),
rnorm(1, stratdiff, stratdiff.sd),
rnorm(1, temporigin1, temporigin.sd),
rnorm(1, tempstrat1, tempstrat.sd),
rnorm(1, temporigin2, temporigin.sd),
rnorm(1, tempstrat2, tempstrat.sd),
rnorm(1, temporigin3, temporigin.sd),
rnorm(1, tempstrat3, tempstrat.sd),
rnorm(1, originstrat, originstrat.sd),
rnorm(1, origintempstrat1, origintempstrat.sd),
rnorm(1, origintempstrat2, origintempstrat.sd),
rnorm(1, origintempstrat3, origintempstrat.sd)
)
coeff
spint
set.seed(100) #so that the created random coefficients can be compared to modeled coefficients
coeff <- c(spint[1],
rnorm(1, tempdiff1, tempdiff.sd),
rnorm(1, tempdiff2, tempdiff.sd),
rnorm(1, tempdiff3, tempdiff.sd),
rnorm(1, origindiff, origindiff.sd),
rnorm(1, stratdiff, stratdiff.sd),
rnorm(1, temporigin1, temporigin.sd),
rnorm(1, tempstrat1, tempstrat.sd),
rnorm(1, temporigin2, temporigin.sd),
rnorm(1, tempstrat2, tempstrat.sd),
rnorm(1, temporigin3, temporigin.sd),
rnorm(1, tempstrat3, tempstrat.sd),
rnorm(1, originstrat, originstrat.sd),
rnorm(1, origintempstrat1, origintempstrat.sd),
rnorm(1, origintempstrat2, origintempstrat.sd),
rnorm(1, origintempstrat3, origintempstrat.sd)
)
coeff
length(temp)
5%*%6
View(bb)
176*7
c<-(1,2,3,4,5,6,7,8,9)
c<-c(1,2,3,4,5,6,7,8,9)
d<-c(1, 1, 1, 1, 2, 2, 2, 2)
c<-c(1,2,3,4,5,6,7,8)
e<- c%*%d
e
mm
View(mm)
View(fake)
my_sso <- launch_shinystan(mod_spint, rstudio = getOption("shinystan.rstudio"))
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/undergrads/harold/analyses/germination_stan")
} else
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
# germidn<-subset(germid, sp!="PLAMED" & sp!="PLACOR")
# length(unique(germidn$uniqueid))
# mean(subset(germidn, germinated==1 & origin=="USA")$daysfromstart)-mean(subset(germidn, germinated==1 & origin=="Europe")$daysfromstart)
library("dplyr")
nloc = 16
nsp = 7
nfamily = 80
nind=1205
norigin = 2 # origin ==1 is Europe
ntemp = 4
nstrat = 2
rep = round((nind/(norigin*norigin*ntemp*nsp)), digits=0) # = 11
(ntot = norigin*ntemp*nstrat*rep) #  176 rows
# Build up the data frame
#loc = gl(nloc, rep, length = ntot) #random effect
temp = gl(ntemp, rep, length = ntot)
origin = as.numeric(as.character(gl(norigin, rep*ntemp, length = ntot, labels=c(0,1))))
strat = as.numeric(as.character(gl(nstrat, rep*ntemp*norigin, length = ntot, c(0,1))))
temp1<-ifelse(temp == 2, 1, 0)
temp2<-ifelse(temp == 3, 1, 0)
temp3<-ifelse(temp == 4, 1, 0)
treatcombo = paste(temp1, temp2, temp3, origin, strat, sep = "_")
(d <- data_frame(temp1, temp2, temp3, origin, strat, treatcombo))
###### Set up differences for each level, for logged response
#locdiff = 0
tempdiff1 = 1.5 #logged days earlier from 1 to 2
tempdiff2= -1 #logged days earlier from 2 to 3
tempdiff3= 2 #logged days earlier from 3 to 4
origindiff = 1.9
stratdiff = 1
# Generating fake data without interactions first
######## SD for each treatment
tempdiff.sd = 0.1
origindiff.sd = 0.1
stratdiff.sd = 0.1
### Original with interactions below
# interactions. 10 two-way interactions
temporigin1 = -1
temporigin2 = -2
temporigin3 = -3
tempstrat1 = -2
tempstrat2 = -1
tempstrat3 = -2
originstrat = -3 #
origintempstrat1 = 3
origintempstrat2 = 3
origintempstrat3 = 3
# interaction sd
temporigin.sd = 0.2 #
tempstrat.sd = 0.1 #
originstrat.sd = 0.24 #
origintempstrat.sd = 0.1
mm <- model.matrix(~(temp1+temp2+temp3+origin+strat)^3, data.frame(temp, origin, strat))
mm<-mm[,-grep("temp1:temp2",colnames(mm))]
mm<-mm[,-grep("temp1:temp3", colnames(mm))]
mm<-mm[,-grep("temp2:temp3",colnames(mm))]
colnames(mm)
#  with individuals
baseinter = 2.48 # baseline intercept across all species
spint <- baseinter + (c(1:nsp)-mean(1:nsp))/2 # different intercepts by species. 7 species
fake <- vector()
cc<- data_frame()
set.seed(100) #so that the created random coefficients can be compared to modeled coefficients
for(i in 1:nsp){ # loop over species. i = 1
# Give species different difference values, drawn from normal.
coeff <- c(spint[i],
rnorm(1, tempdiff1, tempdiff.sd),
rnorm(1, tempdiff2, tempdiff.sd),
rnorm(1, tempdiff3, tempdiff.sd),
rnorm(1, origindiff, origindiff.sd),
rnorm(1, stratdiff, stratdiff.sd),
rnorm(1, temporigin1, temporigin.sd),
rnorm(1, tempstrat1, tempstrat.sd),
rnorm(1, temporigin2, temporigin.sd),
rnorm(1, tempstrat2, tempstrat.sd),
rnorm(1, temporigin3, temporigin.sd),
rnorm(1, tempstrat3, tempstrat.sd),
rnorm(1, originstrat, originstrat.sd),
rnorm(1, origintempstrat1, origintempstrat.sd),
rnorm(1, origintempstrat2, origintempstrat.sd),
rnorm(1, origintempstrat3, origintempstrat.sd)
)
bb <- rnorm(n = length(temp), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(log_y=bb, sp = i,
temp1, temp2, temp3, origin, strat)
fake <- rbind(fake, fakex)
cc<-rbind(cc, coeff) #to track randomly generated coefficients
}
summary(lm(log_y ~
origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 +
(1|sp), data = fake))
save(mod_spint, file="germdate_spint_rstanarm_bigcoeff.Rdata")
