#geom_line(aes(y=0.3571429), color="black", size=2, alpha=1)+
#geom_line(aes(y=0.517149) ,color="#ff0000", size=2, alpha=1)+
#geom_line(aes(y=0.6425871) ,color="#ff0000", size=1, alpha=1)+
ylab("Fraction of visits to Green")+
xlab("Trial")+
theme_bw()+
ggtitle("Green vs. Red")+
annotate("text", x=4, y=.5, label="X-squared = 41.853, df = 3, p-value = 4.312e-09")+
annotate("text", x=5, y=.45, label="Circle= green at wall, square=red at wall")
pdf("green.v.Red.pdf")
print(obdataplot)
dev.off()
obdataplot<-ggplot(obdata, aes(x=(Trial),y=sfraction, color=wall, group=wall))+
#geom_line(size=1, alpha=1) +
# geom_point(position=pd, size=3, alpha=1)+
#geom_point(aes(x=(Trial), y=wfraction), color="black", shape=(obdata$wall), position=pd, size=4, alpha=1)+ #wall=1 is when the bright green is at the wall
geom_point(aes(x=(Trial), y=sfraction), color="#008000", position=pd, shape=obdata$wall, fill="#008000", size=4, alpha=1)+
#geom_smooth(aes(group = origin), size = 1, method = "lm", se = FALSE, alpha=1)+
#geom_line(aes(y=0.482571), color="black", size=1, alpha=1)+
#geom_line(aes(y=0.3571429), color="black", size=2, alpha=1)+
#geom_line(aes(y=0.517149) ,color="#ff0000", size=2, alpha=1)+
#geom_line(aes(y=0.6425871) ,color="#ff0000", size=1, alpha=1)+
ylab("Fraction of visits to Green")+
xlab("Trial")+
theme_bw()+
ggtitle("Green vs. Red")+
annotate("text", x=4, y=.5, label="X-squared = 41.853, df = 3, p-value = 4.312e-09")+
annotate("text", x=1, y=.45, label="Circle= green at wall, square=red at wall")
obdataplot
obdataplot<-ggplot(obdata, aes(x=(Trial),y=sfraction, color=wall, group=wall))+
#geom_line(size=1, alpha=1) +
# geom_point(position=pd, size=3, alpha=1)+
#geom_point(aes(x=(Trial), y=wfraction), color="black", shape=(obdata$wall), position=pd, size=4, alpha=1)+ #wall=1 is when the bright green is at the wall
geom_point(aes(x=(Trial), y=sfraction), color="#008000", position=pd, shape=obdata$wall, fill="#008000", size=4, alpha=1)+
#geom_smooth(aes(group = origin), size = 1, method = "lm", se = FALSE, alpha=1)+
#geom_line(aes(y=0.482571), color="black", size=1, alpha=1)+
#geom_line(aes(y=0.3571429), color="black", size=2, alpha=1)+
#geom_line(aes(y=0.517149) ,color="#ff0000", size=2, alpha=1)+
#geom_line(aes(y=0.6425871) ,color="#ff0000", size=1, alpha=1)+
ylab("Fraction of visits to Green")+
xlab("Trial")+
theme_bw()+
ggtitle("Green vs. Red")+
annotate("text", x=4, y=.5, label="X-squared = 41.853, df = 3, p-value = 4.312e-09")+
annotate("text", x=8, y=.45, label="Circle= green at wall, square=red at wall")
obdataplot
obdataplot<-ggplot(obdata, aes(x=(Trial),y=sfraction, color=wall, group=wall))+
#geom_line(size=1, alpha=1) +
# geom_point(position=pd, size=3, alpha=1)+
#geom_point(aes(x=(Trial), y=wfraction), color="black", shape=(obdata$wall), position=pd, size=4, alpha=1)+ #wall=1 is when the bright green is at the wall
geom_point(aes(x=(Trial), y=sfraction), color="#008000", position=pd, shape=obdata$wall, fill="#008000", size=4, alpha=1)+
#geom_smooth(aes(group = origin), size = 1, method = "lm", se = FALSE, alpha=1)+
#geom_line(aes(y=0.482571), color="black", size=1, alpha=1)+
#geom_line(aes(y=0.3571429), color="black", size=2, alpha=1)+
#geom_line(aes(y=0.517149) ,color="#ff0000", size=2, alpha=1)+
#geom_line(aes(y=0.6425871) ,color="#ff0000", size=1, alpha=1)+
ylab("Fraction of visits to Green")+
xlab("Trial")+
theme_bw()+
ggtitle("Green vs. Red")+
annotate("text", x=4, y=.5, label="X-squared = 41.853, df = 3, p-value = 4.312e-09")+
annotate("text", x=12, y=.45, label="Circle= green at wall, square=red at wall")
obdataplot
obdataplot<-ggplot(obdata, aes(x=(Trial),y=sfraction, color=wall, group=wall))+
#geom_line(size=1, alpha=1) +
# geom_point(position=pd, size=3, alpha=1)+
#geom_point(aes(x=(Trial), y=wfraction), color="black", shape=(obdata$wall), position=pd, size=4, alpha=1)+ #wall=1 is when the bright green is at the wall
geom_point(aes(x=(Trial), y=sfraction), color="#008000", position=pd, shape=obdata$wall, fill="#008000", size=4, alpha=1)+
#geom_smooth(aes(group = origin), size = 1, method = "lm", se = FALSE, alpha=1)+
#geom_line(aes(y=0.482571), color="black", size=1, alpha=1)+
#geom_line(aes(y=0.3571429), color="black", size=2, alpha=1)+
#geom_line(aes(y=0.517149) ,color="#ff0000", size=2, alpha=1)+
#geom_line(aes(y=0.6425871) ,color="#ff0000", size=1, alpha=1)+
ylab("Fraction of visits to Green")+
xlab("Trial")+
theme_bw()+
ggtitle("Green vs. Red")+
annotate("text", x=12, y=.5, label="X-squared = 41.853, df = 3, p-value = 4.312e-09")+
annotate("text", x=12, y=.45, label="Circle= green at wall, square=red at wall")
pdf("green.v.Red.pdf")
print(obdataplot)
dev.off()
set.seed(100)
rnorm(1)
rnorm(1)
rnorm(1)
rnorm(1)
set.seed(100)
rnorm(1)
origin = gl(norigin, rep*ntemp, length = ntot)
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/undergrads/harold/analyses/germination_stan")
} else
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
library("dplyr")
nloc = 16
nsp = 7
nfamily = 80
nind=1205
norigin = 2 # origin ==1 is Europe
ntemp = 4
nstrat = 2
rep = round((nind/(norigin*norigin*ntemp)), digits=0) # = 75
(ntot = norigin*ntemp*nstrat*rep) #  176 rows
temp = gl(ntemp, rep, length = ntot)
origin = gl(norigin, rep*ntemp, length = ntot)
strat = gl(nstrat, rep*ntemp*norigin, length = ntot)
temp1<-ifelse(temp == 2, 1, 0)
temp2<-ifelse(temp == 3, 1, 0)
temp3<-ifelse(temp == 4, 1, 0)
unique(origin)
# Fake data for germination date
# modified from Dan Flynn's "FakeBudburst_Generate_ind.R" file
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Set up: same as experiment, with two continents, 7 species, two levels of stratification length,  two levels of origin,
#   and four levels of temperature. Also has interactions and four interactions.
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/undergrads/harold/analyses/germination_stan")
} else
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
# germidn<-subset(germid, sp!="PLAMED" & sp!="PLACOR")
# length(unique(germidn$uniqueid))
# mean(subset(germidn, germinated==1 & origin=="USA")$daysfromstart)-mean(subset(germidn, germinated==1 & origin=="Europe")$daysfromstart)
library("dplyr")
nloc = 16
nsp = 7
nfamily = 80
nind=1205
norigin = 2 # origin ==1 is Europe
ntemp = 4
nstrat = 2
#rep = 11 # only 1205/(2*2*4*7)=~11 seeds within each combination of treatments.
rep = round((nind/(norigin*norigin*ntemp)), digits=0) # = 75
(ntot = norigin*ntemp*nstrat*rep) #  176 rows
# Build up the data frame
#loc = gl(nloc, rep, length = ntot) #random effect
temp = gl(ntemp, rep, length = ntot)
origin = gl(norigin, rep*ntemp, length = ntot)
strat = gl(nstrat, rep*ntemp*norigin, length = ntot)
temp1<-ifelse(temp == 2, 1, 0)
temp2<-ifelse(temp == 3, 1, 0)
temp3<-ifelse(temp == 4, 1, 0)
treatcombo = paste(temp1, temp2, temp3, origin, strat, sep = "_")
(d <- data_frame(temp1, temp2, temp3, origin, strat, treatcombo))
###### Set up differences for each level, for logged response
#locdiff = 0
tempdiff1 = 0.01 #logged days earlier from 1 to 2
tempdiff2= -0.01 #logged days earlier from 2 to 3
tempdiff3= 0.02 #logged days earlier from 3 to 4
origindiff = 0.9
stratdiff = 0.01
# Generating fake data without interactions first
######## SD for each treatment
tempdiff.sd = 0.014
origindiff.sd = 0.4
stratdiff.sd = 0.005
### Original with interactions below
# interactions. 9 two-way interactions
temporigin1 = -0.07
temporigin2 = -0.02
temporigin3 = -0.09
tempstrat1 = -0.002
tempstrat2 = -0.001
tempstrat3 = -0.0025
originstrat = -0.022 #
origintempstrat1 = 0.005
origintempstrat2 = 0.001
origintempstrat3 = 0.005
# interactions. 9 two-way interactions
temporigin.sd = 0.021 #
tempstrat.sd = 0.0003 #
originstrat.sd = 0.0004 #
origintempstrat.sd = 0.001
mm <- model.matrix(~(temp1+temp2+temp3+origin+strat)^3, data.frame(temp, origin, strat))
mm<-mm[,-grep("temp1:temp2",colnames(mm))]
mm<-mm[,-grep("temp1:temp3", colnames(mm))]
mm<-mm[,-grep("temp2:temp3",colnames(mm))]
colnames(mm)
#  with individuals
baseinter = 2.48 # baseline intercept across all species
spint <- baseinter + (c(1:nsp)-mean(1:nsp))/2 # different intercepts by species. 7 species
fake <- vector()
for(i in 1:nsp){ # loop over species. i = 1
# Give species different difference values, drawn from normal.
set.seed(100) #so that the created random coefficients can be compared to modeled coefficients
coeff <- c(spint[i],
rnorm(1, tempdiff1, tempdiff.sd),
rnorm(1, tempdiff2, tempdiff.sd),
rnorm(1, tempdiff3, tempdiff.sd),
rnorm(1, origindiff, origindiff.sd),
rnorm(1, stratdiff, stratdiff.sd),
rnorm(1, temporigin1, temporigin.sd),
rnorm(1, tempstrat1, tempstrat.sd),
rnorm(1, temporigin2, temporigin.sd),
rnorm(1, tempstrat2, tempstrat.sd),
rnorm(1, temporigin3, temporigin.sd),
rnorm(1, tempstrat3, tempstrat.sd),
rnorm(1, originstrat, originstrat.sd),
rnorm(1, origintempstrat1, origintempstrat.sd),
rnorm(1, origintempstrat2, origintempstrat.sd),
rnorm(1, origintempstrat3, origintempstrat.sd)
)
bb <- rnorm(n = length(temp), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(log_y=bb, sp = i,
temp1, temp2, temp3, origin, strat)
fake <- rbind(fake, fakex)
}
summary(lm(log_y ~
origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 +
(1|sp), data = fake))
View(fake)
?data_frame
??data_frame
unique(origin)
unique(fake$origin)
unique(temp1)
origin = gl(norigin, rep*ntemp, length = ntot, labels=c(0,1))
unique(origin)
# Fake data for germination date
# modified from Dan Flynn's "FakeBudburst_Generate_ind.R" file
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
# Set up: same as experiment, with two continents, 7 species, two levels of stratification length,  two levels of origin,
#   and four levels of temperature. Also has interactions and four interactions.
# <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <> <>
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/undergrads/harold/analyses/germination_stan")
} else
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
# germidn<-subset(germid, sp!="PLAMED" & sp!="PLACOR")
# length(unique(germidn$uniqueid))
# mean(subset(germidn, germinated==1 & origin=="USA")$daysfromstart)-mean(subset(germidn, germinated==1 & origin=="Europe")$daysfromstart)
library("dplyr")
nloc = 16
nsp = 7
nfamily = 80
nind=1205
norigin = 2 # origin ==1 is Europe
ntemp = 4
nstrat = 2
#rep = 11 # only 1205/(2*2*4*7)=~11 seeds within each combination of treatments.
rep = round((nind/(norigin*norigin*ntemp)), digits=0) # = 75
(ntot = norigin*ntemp*nstrat*rep) #  176 rows
# Build up the data frame
#loc = gl(nloc, rep, length = ntot) #random effect
temp = gl(ntemp, rep, length = ntot)
origin = gl(norigin, rep*ntemp, length = ntot, labels=c(0,1))
strat = gl(nstrat, rep*ntemp*norigin, length = ntot, c(0,1))
temp1<-ifelse(temp == 2, 1, 0)
temp2<-ifelse(temp == 3, 1, 0)
temp3<-ifelse(temp == 4, 1, 0)
treatcombo = paste(temp1, temp2, temp3, origin, strat, sep = "_")
(d <- data_frame(temp1, temp2, temp3, origin, strat, treatcombo))
###### Set up differences for each level, for logged response
#locdiff = 0
tempdiff1 = 0.01 #logged days earlier from 1 to 2
tempdiff2= -0.01 #logged days earlier from 2 to 3
tempdiff3= 0.02 #logged days earlier from 3 to 4
origindiff = 0.9
stratdiff = 0.01
# Generating fake data without interactions first
######## SD for each treatment
tempdiff.sd = 0.014
origindiff.sd = 0.4
stratdiff.sd = 0.005
### Original with interactions below
# interactions. 9 two-way interactions
temporigin1 = -0.07
temporigin2 = -0.02
temporigin3 = -0.09
tempstrat1 = -0.002
tempstrat2 = -0.001
tempstrat3 = -0.0025
originstrat = -0.022 #
origintempstrat1 = 0.005
origintempstrat2 = 0.001
origintempstrat3 = 0.005
# interactions. 9 two-way interactions
temporigin.sd = 0.021 #
tempstrat.sd = 0.0003 #
originstrat.sd = 0.0004 #
origintempstrat.sd = 0.001
mm <- model.matrix(~(temp1+temp2+temp3+origin+strat)^3, data.frame(temp, origin, strat))
mm<-mm[,-grep("temp1:temp2",colnames(mm))]
mm<-mm[,-grep("temp1:temp3", colnames(mm))]
mm<-mm[,-grep("temp2:temp3",colnames(mm))]
colnames(mm)
#  with individuals
baseinter = 2.48 # baseline intercept across all species
spint <- baseinter + (c(1:nsp)-mean(1:nsp))/2 # different intercepts by species. 7 species
fake <- vector()
for(i in 1:nsp){ # loop over species. i = 1
# Give species different difference values, drawn from normal.
set.seed(100) #so that the created random coefficients can be compared to modeled coefficients
coeff <- c(spint[i],
rnorm(1, tempdiff1, tempdiff.sd),
rnorm(1, tempdiff2, tempdiff.sd),
rnorm(1, tempdiff3, tempdiff.sd),
rnorm(1, origindiff, origindiff.sd),
rnorm(1, stratdiff, stratdiff.sd),
rnorm(1, temporigin1, temporigin.sd),
rnorm(1, tempstrat1, tempstrat.sd),
rnorm(1, temporigin2, temporigin.sd),
rnorm(1, tempstrat2, tempstrat.sd),
rnorm(1, temporigin3, temporigin.sd),
rnorm(1, tempstrat3, tempstrat.sd),
rnorm(1, originstrat, originstrat.sd),
rnorm(1, origintempstrat1, origintempstrat.sd),
rnorm(1, origintempstrat2, origintempstrat.sd),
rnorm(1, origintempstrat3, origintempstrat.sd)
)
bb <- rnorm(n = length(temp), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(log_y=bb, sp = i,
temp1, temp2, temp3, origin, strat)
fake <- rbind(fake, fakex)
}
summary(lm(log_y ~
origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 +
(1|sp), data = fake))
View(fake)
length(temp)
length(fake)
dim(fake)
8400/1200
rm(list=ls())
options(stringsAsFactors = FALSE)
options(shinystan.rstudio = TRUE)
options(mc.cores = parallel::detectCores())
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/undergrads/harold/analyses/germination_stan")
} else
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
# germidn<-subset(germid, sp!="PLAMED" & sp!="PLACOR")
# length(unique(germidn$uniqueid))
# mean(subset(germidn, germinated==1 & origin=="USA")$daysfromstart)-mean(subset(germidn, germinated==1 & origin=="Europe")$daysfromstart)
library("dplyr")
nloc = 16
nsp = 7
nfamily = 80
nind=1205
norigin = 2 # origin ==1 is Europe
ntemp = 4
nstrat = 2
#rep = 11 # only 1205/(2*2*4*7)=~11 seeds within each combination of treatments.
rep = round((nind/(norigin*norigin*ntemp)), digits=0) # = 75
(ntot = norigin*ntemp*nstrat*rep) #  176 rows
# Build up the data frame
#loc = gl(nloc, rep, length = ntot) #random effect
temp = gl(ntemp, rep, length = ntot)
origin = gl(norigin, rep*ntemp, length = ntot, labels=c(0,1))
strat = gl(nstrat, rep*ntemp*norigin, length = ntot, c(0,1))
temp1<-ifelse(temp == 2, 1, 0)
temp2<-ifelse(temp == 3, 1, 0)
temp3<-ifelse(temp == 4, 1, 0)
treatcombo = paste(temp1, temp2, temp3, origin, strat, sep = "_")
(d <- data_frame(temp1, temp2, temp3, origin, strat, treatcombo))
###### Set up differences for each level, for logged response
#locdiff = 0
tempdiff1 = 0.01 #logged days earlier from 1 to 2
tempdiff2= -0.01 #logged days earlier from 2 to 3
tempdiff3= 0.02 #logged days earlier from 3 to 4
origindiff = 0.9
stratdiff = 0.01
# Generating fake data without interactions first
######## SD for each treatment
tempdiff.sd = 0.014
origindiff.sd = 0.4
stratdiff.sd = 0.005
### Original with interactions below
# interactions. 9 two-way interactions
temporigin1 = -0.07
temporigin2 = -0.02
temporigin3 = -0.09
tempstrat1 = -0.002
tempstrat2 = -0.001
tempstrat3 = -0.0025
originstrat = -0.022 #
origintempstrat1 = 0.005
origintempstrat2 = 0.001
origintempstrat3 = 0.005
# interactions. 9 two-way interactions
temporigin.sd = 0.021 #
tempstrat.sd = 0.0003 #
originstrat.sd = 0.0004 #
origintempstrat.sd = 0.001
mm <- model.matrix(~(temp1+temp2+temp3+origin+strat)^3, data.frame(temp, origin, strat))
mm<-mm[,-grep("temp1:temp2",colnames(mm))]
mm<-mm[,-grep("temp1:temp3", colnames(mm))]
mm<-mm[,-grep("temp2:temp3",colnames(mm))]
colnames(mm)
#  with individuals
baseinter = 2.48 # baseline intercept across all species
spint <- baseinter + (c(1:nsp)-mean(1:nsp))/2 # different intercepts by species. 7 species
fake <- vector()
for(i in 1:nsp){ # loop over species. i = 1
# Give species different difference values, drawn from normal.
set.seed(100) #so that the created random coefficients can be compared to modeled coefficients
coeff <- c(spint[i],
rnorm(1, tempdiff1, tempdiff.sd),
rnorm(1, tempdiff2, tempdiff.sd),
rnorm(1, tempdiff3, tempdiff.sd),
rnorm(1, origindiff, origindiff.sd),
rnorm(1, stratdiff, stratdiff.sd),
rnorm(1, temporigin1, temporigin.sd),
rnorm(1, tempstrat1, tempstrat.sd),
rnorm(1, temporigin2, temporigin.sd),
rnorm(1, tempstrat2, tempstrat.sd),
rnorm(1, temporigin3, temporigin.sd),
rnorm(1, tempstrat3, tempstrat.sd),
rnorm(1, originstrat, originstrat.sd),
rnorm(1, origintempstrat1, origintempstrat.sd),
rnorm(1, origintempstrat2, origintempstrat.sd),
rnorm(1, origintempstrat3, origintempstrat.sd)
)
bb <- rnorm(n = length(temp), mean = mm %*% coeff, sd = 0.1)
fakex <- data.frame(log_y=bb, sp = i,
temp1, temp2, temp3, origin, strat)
fake <- rbind(fake, fakex)
}
summary(lm(log_y ~
origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 +
(1|sp), data = fake))
save(fake, file="Fake_germdata.RData")
rm(list=ls())
options(stringsAsFactors = FALSE)
options(shinystan.rstudio = TRUE)
options(mc.cores = parallel::detectCores())
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/undergrads/harold/analyses/germination_stan")
} else
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
library(rstan)
library(ggplot2)
library(shinystan)
library(rstanarm)
runstan=TRUE      # set to true if running the stan model
realdata=FALSE    # set to true to run on real data
if (realdata==TRUE) {
# Setting up the  real data  for the Stan model-----------------
load("germs.Rdata") #cleaned and processed real data
germs.y<-(subset(germs,
germinated==1 &
sp!="PLAMED" &  sp!="PLACOR"))    #just the data from seeds that germianted, and taking out the congenerics
data<-germs.y
nseed<-length(unique(data$uniqueid)) #1205 unique seeds
N<-nseed
y<-data$daysfromstart    # dependent variable
log_y=log(y)
temp1<-ifelse(data$temp==16.0, 1, 0) #coding temperature as binary dummy variables
temp2<-ifelse(data$temp==20.7, 1, 0)
temp3<-ifelse(data$temp==25.3,1, 0)
strat<-ifelse(data$strat==30,0,1)
origin<-ifelse(data$origin=="Europe", 0, 1)
intercept<-rep(1, nrow(data))
#setting up to random effects data:
nsp<-length(unique(germs.y$sp))
sp_alph<-data$sp
sp<-ifelse (sp_alph=="CAPBUR", 1,     #making sp numeric, in alphabetical order
ifelse(sp_alph=="CHEMAJ",2,
ifelse(sp_alph=="DACGLO", 3,
ifelse(sp_alph=="PLALAN", 4,
ifelse(sp_alph=="PLAMAJ", 5,
ifelse(sp_alph=="RUMCRI", 6, 7))))))
nsp <- length(unique(data$sp))
#putting all the data together:
datax <- list(N=N, log_y=log_y, temp1=temp1, temp2=temp2, temp3=temp3 ,origin=origin, strat=strat,  nsp=nsp, sp=sp)
#,nloc=nloc, nfamily=nfamily, loc=loc, family=family)
}
if (runstan==TRUE) {
if (realdata==TRUE) {germdata=datax
} else
{load("Fake_germdata.RData")
germdata<-list(log_y=fake$log_y, temp1=as.numeric(fake$temp1),temp2=as.numeric(fake$temp2),
temp3=as.numeric(fake$temp3), origin=as.numeric(fake$origin),
strat=as.numeric(fake$strat), N=nrow(fake), sp=as.numeric(fake$sp), nsp=length(unique(fake$sp)))}
##using rstanarm:
# fitting  random intercept:
mod_spint<-stan_lmer(log_y ~ origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 + (1|sp),
data=germdata, algorithm= "sampling",
prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5)) # by default, creates four chains with 1000 warmup, and 1000 samling
# note to Lizzie: Tried: prior=normal(0,30), prior_intercept=normal(0,30), prior_aux=cauchy(0,15) but no change in output
#now adding random slopes
mod_rs<-stan_lmer(log_y ~ origin*strat*temp1*temp2*temp3  +
(1|sp) + (origin -1|sp) + (strat -1|sp) + (origin-1|sp) + (temp1-1|sp) + (temp2-1|sp) + (temp3-1|sp),
data=germdata, algorithm= "sampling", prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5))
}
mod_rs<-stan_lmer(log_y ~ origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 +
(1|sp) +
(origin -1|sp) + (strat -1|sp) + (origin-1|sp) + (temp1-1|sp) + (temp2-1|sp) + (temp3-1|sp),
data=germdata, algorithm= "sampling",
prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5))
View(fake)
as.numeric(fake$origin)
unique(fake$origin)
rm(list=ls())
options(stringsAsFactors = FALSE)
options(shinystan.rstudio = TRUE)
