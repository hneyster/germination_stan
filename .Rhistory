View(data)
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month=! c(5,6,7,8))
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month=! c(5,6,7,8)))
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month!= c(5,6,7,8)))
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month== c(1,2,3,4,9,10,11,12)))
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month== 1 || 2 || 3 || 4 || 9 || 10 || 11 || 12)))
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month== 1 || 2 || 3 || 4 || 9 || 10 || 11 || 12))
summary(mod)
mean(subset(data, data$week==1 & data$month==1 || 2 || 3 || 4 || 9 || 10 || 11 || 12)$Total.Precip..mm., na.rm=TRUE)
mean(subset(data, data$week==2 & data$month==1 || 2 || 3 || 4 || 9 || 10 || 11 || 12)$Total.Precip..mm., na.rm=TRUE)
subset(data, data$week==2 & data$month==1 || 2 || 3 || 4 || 9 || 10 || 11 || 12)$Total.Precip..mm., na.rm=TRUE
mean(subset(data, data$week==2 & data$month==1)$Total.Precip..mm., na.rm=TRUE)
View(data)
mean(subset(data, data$week==2 && data$month==1)$Total.Precip..mm., na.rm=TRUE)
mean(subset(data, data$week==2 && data$month==2)$Total.Precip..mm., na.rm=TRUE)
mean(subset(data, data$week==2 && as.numeric(data$month)==2)$Total.Precip..mm., na.rm=TRUE)
mean(subset(data, data$week==2)$Total.Precip..mm., na.rm=TRUE)
mod<-lm(Total.Precip..mm. ~ (week), data=subset(data, data$month==1))
mod<-lm(Total.Precip..mm. ~ (week), data=data)
data$rain<- ifelse(data$Total.Precip..mm.<=1, 0, 1)
mod1<-glm(Total.Precip..mm. ~ (week), family=logit, data=data)
mod1<-glm(Total.Precip..mm. ~ (week), family=binomial, link=logit, data=data)
?glm
mod1<-glm(Total.Precip..mm. ~ (week), family=binomial (link="logit"), data=data)
mod1<-glm(rain ~ (week), family=binomial (link="logit"), data=data)
summary(mod1)
plot(data$week, data$rain)
plot(data$week, data$rain, pch=15)
plot(data$week, data$rain, pch=30)
plot(data$rain ~ jitter(data$rain, 1))
plot(data$rain ~ jitter(data$rain, 2))
mean(subset(data, data$week==2)$rain, na.rm=TRUE)
mean(subset(data, data$week==1)$rain, na.rm=TRUE)
plot(data$rain ~ jitter(data$rain, .5))
plot(data$rain ~ jitter(data$rain,0))
plot(data$rain ~ jitter(data$week,1))
plot(jitter(data$rain,1) ~ jitter(data$week,1))
abline(.245, -.287)
mod2<-lm(Total.Precip..mm. ~ (week), data=data, family=poisson(link="log"))
mod2<-glm(Total.Precip..mm. ~ (week), data=data, family=poisson(link="log"))
warnings()
mod2<-glm(log(Total.Precip..mm.) ~ (week), data=data)
log(0)
library(rstanarm)
mod2<-rstanarm.glm((Total.Precip..mm.) ~ (week), data=data)
mod2<-stan_glm((Total.Precip..mm.) ~ (week), data=data)
my_sso <- launch_shinystan(mod2, rstudio = getOption("shinystan.rstudio"))
mod3<-stan_glm(rain~week, family=binomial(link="logit"), data=data)
my_sso <- launch_shinystan(mod3, rstudio = getOption("shinystan.rstudio"))
rm(list=ls())
options(stringsAsFactors = FALSE)
options(shinystan.rstudio = TRUE)
options(mc.cores = parallel::detectCores())
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/undergrads/harold/analyses/germination_stan")
} else
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
##libraries
library(rstan)
library(shinystan)
library(lme4)
library(ggplot2)
library(rstanarm)
## to download the dev version of rstanarm:
#install.packages("devtools")
#library(devtools)
#devtools::install_github("stan-dev/rstanarm", args = "--preclean", build_vignettes = FALSE)
## What do you want to do?
runstan=TRUE      # set to true if running the stan model
realdata=TRUE    # set to true to run on real data
if (realdata==TRUE) {
# Setting up the  real data  for the Stan model-----------------
load("hlms.Rdata")  #cleaned and processed real height data
hlms$uniqind<- do.call(paste, c(hlms[c("sp", "individual")], sep="_")) #creates a column that defines the individual
data<-hlms
nseed<-length(unique(data$uniqueid)) #1578 unique seeds
N<-nseed
y<-data$gr  # dependent variable
temp1<-ifelse(data$temp==16.0, 1, 0) #coding temperature as binary dummy variables
temp2<-ifelse(data$temp==20.7, 1, 0)
temp3<-ifelse(data$temp==25.3,1, 0)
strat<-ifelse(data$strat==30,0,1)
origin<-ifelse(data$origin=="Europe", 0, 1)
intercept<-rep(1, nrow(data))
#setting up to random effects data:
nsp<-length(unique(data$sp))
sp_alph<-data$sp
sp<-ifelse (sp_alph=="CAPBUR", 1,     #making sp numeric, in alphabetical order
ifelse(sp_alph=="CHEMAJ",2,
ifelse(sp_alph=="DACGLO", 3,
ifelse(sp_alph=="PLALAN", 4,
ifelse(sp_alph=="PLAMAJ", 5,
ifelse(sp_alph=="RUMCRI", 6, 7))))))
loc<-as.numeric(as.factor(data$loc))
sfamily<-as.numeric(as.factor(data$uniqind))
nsp <- length(unique(data$sp))
#putting all the data together:
datax <- data.frame(N=N, y=y, temp1=temp1, temp2=temp2, temp3=temp3 ,origin=origin, strat=strat,
nsp=nsp, sp=sp, loc=loc, sfamily=sfamily)
}
## fitting the stan model -------------------------------------------------
mod_gr<-stan_lmer(y ~ origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3 +
(1|sp/loc/sfamily) +
(origin -1|sp/loc/sfamily) + (strat -1|sp/loc/sfamily) + (temp1 -1|sp/loc/sfamily) +
(temp2 -1|sp/loc/sfamily) +  (temp3 -1|sp/loc/sfamily)+
(origin:strat -1|sp/loc/sfamily) + (origin:temp1 -1|sp/loc/sfamily) + (origin:temp2 -1|sp/loc/sfamily) +
(origin:temp3 -1|sp/loc/sfamily) +  (strat:temp1 -1|sp/loc/sfamily) + (strat:temp2 -1|sp/loc/sfamily) +
(strat:temp3 -1|sp/loc/sfamily) + (origin:strat:temp1 -1|sp/loc/sfamily) +
(origin:strat:temp2 -1|sp/loc/sfamily) + (origin:strat:temp3 -1|sp/loc/sfamily),
data=germdata, algorithm= "sampling",
prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5),
chains=1, iter=300) # by default, creates four chains with 1000 warmup, and 1000 samling
germdata=datax
mod_gr<-stan_lmer(y ~ origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3 +
(1|sp/loc/sfamily) +
(origin -1|sp/loc/sfamily) + (strat -1|sp/loc/sfamily) + (temp1 -1|sp/loc/sfamily) +
(temp2 -1|sp/loc/sfamily) +  (temp3 -1|sp/loc/sfamily)+
(origin:strat -1|sp/loc/sfamily) + (origin:temp1 -1|sp/loc/sfamily) + (origin:temp2 -1|sp/loc/sfamily) +
(origin:temp3 -1|sp/loc/sfamily) +  (strat:temp1 -1|sp/loc/sfamily) + (strat:temp2 -1|sp/loc/sfamily) +
(strat:temp3 -1|sp/loc/sfamily) + (origin:strat:temp1 -1|sp/loc/sfamily) +
(origin:strat:temp2 -1|sp/loc/sfamily) + (origin:strat:temp3 -1|sp/loc/sfamily),
data=germdata, algorithm= "sampling",
prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5),
chains=1, iter=300) # by default, creates four chains with 1000 warmup, and 1000 samling
my_sso <- launch_shinystan(mod_gr, rstudio = getOption("shinystan.rstudio"))
mod_gr<-stan_lmer(y ~ origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3 +
(1|sp/loc/sfamily) +
(origin -1|sp/loc/sfamily) + (strat -1|sp/loc/sfamily) + (temp1 -1|sp/loc/sfamily) +
(temp2 -1|sp/loc/sfamily) +  (temp3 -1|sp/loc/sfamily)+
(origin:strat -1|sp/loc/sfamily) + (origin:temp1 -1|sp/loc/sfamily) + (origin:temp2 -1|sp/loc/sfamily) +
(origin:temp3 -1|sp/loc/sfamily) +  (strat:temp1 -1|sp/loc/sfamily) + (strat:temp2 -1|sp/loc/sfamily) +
(strat:temp3 -1|sp/loc/sfamily) + (origin:strat:temp1 -1|sp/loc/sfamily) +
(origin:strat:temp2 -1|sp/loc/sfamily) + (origin:strat:temp3 -1|sp/loc/sfamily),
data=germdata, algorithm= "sampling",
prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5),
chains=4, iter=2000) # by default, creates four chains with 1000 warmup, and 1000 samling
save("mod_gr.Rdata")
save(mod_gr, "mod_gr.Rdata")
save(mod_gr, file="mod_gr.Rdata")
my_sso <- launch_shinystan(mod_gr, rstudio = getOption("shinystan.rstudio"))
p1<-plot(mod_gr, pars=c("origin", "strat", "temp1", "temp2", "temp3", "origin:strat", "origin:temp1", "origin:temp2",
"origin:temp3", "origin:strat:temp1", "origin:strat:temp2", "origin:strat:temp3"))
p1<-plot(mod_gr, pars=c("origin", "strat", "temp1", "temp2", "temp3", "origin:strat", "origin:temp1", "origin:temp2",
"origin:temp3", "origin:strat:temp1", "origin:strat:temp2", "origin:strat:temp3"))
p2<-plot(mod_gr, pars=c("b[origin sp:1]", "b[strat sp:1]", "b[temp1 sp:1]", "b[temp2 sp:1]", "b[temp3 sp:1]", "b[origin:strat sp:1]",
"b[origin:temp1 sp:1]", "b[origin:temp2 sp:1]", "b[origin:temp3 sp:1]", "b[origin:strat:temp1 sp:1]",
"b[origin:strat:temp2 sp:1]", "b[origin:strat:temp3 sp:1]"))
p3<-plot(mod_gr, pars=c("b[origin sp:2]", "b[strat sp:2]", "b[temp1 sp:2]", "b[temp2 sp:2]", "b[temp3 sp:2]", "b[origin:strat sp:2]",
"b[origin:temp1 sp:2]", "b[origin:temp2 sp:2]", "b[origin:temp3 sp:2]", "b[origin:strat:temp1 sp:2]",
"b[origin:strat:temp2 sp:2]", "b[origin:strat:temp3 sp:2]"))
p4<-plot(mod_gr, pars=c("b[origin sp:3]", "b[strat sp:3]", "b[temp1 sp:3]", "b[temp2 sp:3]", "b[temp3 sp:3]", "b[origin:strat sp:3]",
"b[origin:temp1 sp:3]", "b[origin:temp2 sp:3]",  "b[origin:temp3 sp:3]", "b[origin:strat:temp1 sp:3]",
"b[origin:strat:temp2 sp:3]", "b[origin:strat:temp3 sp:3]"))
p5<-plot(mod_gr, pars=c("b[origin sp:4]", "b[strat sp:4]", "b[temp1 sp:4]", "b[temp2 sp:4]", "b[temp3 sp:4]", "b[origin:strat sp:4]",
"b[origin:temp1 sp:4]", "b[origin:temp2 sp:4]",  "b[origin:temp3 sp:4]", "b[origin:strat:temp1 sp:4]",
"b[origin:strat:temp2 sp:4]", "b[origin:strat:temp3 sp:4]"))
p6<-plot(mod_gr, pars=c("b[origin sp:5]", "b[strat sp:5]", "b[temp1 sp:5]", "b[temp2 sp:5]", "b[temp3 sp:5]", "b[origin:strat sp:5]",
"b[origin:temp1 sp:5]", "b[origin:temp2 sp:5]",  "b[origin:temp3 sp:5]", "b[origin:strat:temp1 sp:5]",
"b[origin:strat:temp2 sp:5]", "b[origin:strat:temp3 sp:5]"))
p7<-plot(mod_gr, pars=c("b[origin sp:6]", "b[strat sp:6]", "b[temp1 sp:6]", "b[temp2 sp:6]", "b[temp3 sp:6]", "b[origin:strat sp:6]",
"b[origin:temp1 sp:6]", "b[origin:temp2 sp:6]",  "b[origin:temp3 sp:6]", "b[origin:strat:temp1 sp:6]",
"b[origin:strat:temp2 sp:6]", "b[origin:strat:temp3 sp:6]"))
pdf("gr.pdf", width=20, height=7)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
dev.off()
library(ggplot2)
pdf("gr.pdf", width=20, height=7)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
multiplot(p1)
?multiplot
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
multiplot(p1)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
library(ggplot2)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
??multiplot
library(ggplot2)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
dev.off()
pdf("gr.pdf", width=20, height=7)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
dev.off()
sp
mod_grfreq2<-lmer(log_y ~ origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3 +
(1|sp/loc/sfamily) +
(origin -1|sp/loc/sfamily) + (strat -1|sp/loc/sfamily) + (temp1 -1|sp/loc/sfamily) +
(temp2 -1|sp/loc/sfamily) +  (temp3 -1|sp/loc/sfamily),
data=germdata)
mod_grfreq2<-lmer(y ~ origin + strat + temp1 + temp2 + temp3 +
origin:strat + origin:temp1 + origin:temp2 + origin:temp3 +
strat:temp1 + strat:temp2 + strat:temp3 +
origin:strat:temp1 +  origin:strat:temp2 + origin:strat:temp3 +
(1|sp/loc/sfamily) +
(origin -1|sp/loc/sfamily) + (strat -1|sp/loc/sfamily) + (temp1 -1|sp/loc/sfamily) +
(temp2 -1|sp/loc/sfamily) +  (temp3 -1|sp/loc/sfamily),
data=germdata)
summary(grfreq2)
summary(mod_grfreq2)
anova(mod_grfreq2)
p1<-plot(mod_rate, pars=c("origin", "strat", "temp1", "temp2", "temp3", "origin:strat", "origin:temp1", "origin:temp2",
"origin:temp3", "strat:temp1", "strat:temp2", "strat:temp3", "origin:strat:temp1", "origin:strat:temp2", "origin:strat:temp3"))
p2<-plot(mod_rate, pars=c("b[origin sp:1]", "b[strat sp:1]", "b[temp1 sp:1]", "b[temp2 sp:1]", "b[temp3 sp:1]", "b[origin:strat sp:1]",
"b[origin:temp1 sp:1]", "b[origin:temp2 sp:1]", "b[origin:temp3 sp:1]", "b[strat:temp1 sp:1]", "b[strat:temp2 sp:1]", "b[strat:temp3 sp:1]", "b[origin:strat:temp1 sp:1]",
"b[origin:strat:temp2 sp:1]", "b[origin:strat:temp3 sp:1]"))
p1<-plot(mod_gr, pars=c("origin", "strat", "temp1", "temp2", "temp3", "origin:strat", "origin:temp1", "origin:temp2",
"origin:temp3", "strat:temp1", "strat:temp2", "strat:temp3", "origin:strat:temp1", "origin:strat:temp2", "origin:strat:temp3"))
p2<-plot(mod_gr, pars=c("b[origin sp:1]", "b[strat sp:1]", "b[temp1 sp:1]", "b[temp2 sp:1]", "b[temp3 sp:1]", "b[origin:strat sp:1]",
"b[origin:temp1 sp:1]", "b[origin:temp2 sp:1]", "b[origin:temp3 sp:1]", "b[strat:temp1 sp:1]", "b[strat:temp2 sp:1]", "b[strat:temp3 sp:1]", "b[origin:strat:temp1 sp:1]",
"b[origin:strat:temp2 sp:1]", "b[origin:strat:temp3 sp:1]"))
p3<-plot(mod_gr, pars=c("b[origin sp:2]", "b[strat sp:2]", "b[temp1 sp:2]", "b[temp2 sp:2]", "b[temp3 sp:2]", "b[origin:strat sp:2]",
"b[origin:temp1 sp:2]", "b[origin:temp2 sp:2]", "b[origin:temp3 sp:2]","b[strat:temp1 sp:2]", "b[strat:temp2 sp:2]", "b[strat:temp3 sp:2]", "b[origin:strat:temp1 sp:2]",
"b[origin:strat:temp2 sp:2]", "b[origin:strat:temp3 sp:2]"))
p4<-plot(mod_gr, pars=c("b[origin sp:3]", "b[strat sp:3]", "b[temp1 sp:3]", "b[temp2 sp:3]", "b[temp3 sp:3]", "b[origin:strat sp:3]",
"b[origin:temp1 sp:3]", "b[origin:temp2 sp:3]",  "b[origin:temp3 sp:3]", "b[strat:temp1 sp:3]", "b[strat:temp2 sp:3]", "b[strat:temp3 sp:3]", "b[origin:strat:temp1 sp:3]",
"b[origin:strat:temp2 sp:3]", "b[origin:strat:temp3 sp:3]"))
p5<-plot(mod_gr, pars=c("b[origin sp:4]", "b[strat sp:4]", "b[temp1 sp:4]", "b[temp2 sp:4]", "b[temp3 sp:4]", "b[origin:strat sp:4]",
"b[origin:temp1 sp:4]", "b[origin:temp2 sp:4]",  "b[origin:temp3 sp:4]", "b[strat:temp1 sp:4]", "b[strat:temp2 sp:4]", "b[strat:temp3 sp:4]", "b[origin:strat:temp1 sp:4]",
"b[origin:strat:temp2 sp:4]", "b[origin:strat:temp3 sp:4]"))
p6<-plot(mod_gr, pars=c("b[origin sp:5]", "b[strat sp:5]", "b[temp1 sp:5]", "b[temp2 sp:5]", "b[temp3 sp:5]", "b[origin:strat sp:5]",
"b[origin:temp1 sp:5]", "b[origin:temp2 sp:5]",  "b[origin:temp3 sp:5]", "b[strat:temp1 sp:5]", "b[strat:temp2 sp:5]", "b[strat:temp3 sp:5]", "b[origin:strat:temp1 sp:5]",
"b[origin:strat:temp2 sp:5]", "b[origin:strat:temp3 sp:5]"))
p7<-plot(mod_gr, pars=c("b[origin sp:6]", "b[strat sp:6]", "b[temp1 sp:6]", "b[temp2 sp:6]", "b[temp3 sp:6]", "b[origin:strat sp:6]",
"b[origin:temp1 sp:6]", "b[origin:temp2 sp:6]",  "b[origin:temp3 sp:6]","b[strat:temp1 sp:6]", "b[strat:temp2 sp:6]", "b[strat:temp3 sp:6]", "b[origin:strat:temp1 sp:6]",
"b[origin:strat:temp2 sp:6]", "b[origin:strat:temp3 sp:6]"))
pdf("gr.pdf", width=20, height=7)
pdf("gr.pdf", width=20, height=7)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
dev.off()
pdf("gr.pdf", width=20, height=9)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
dev.off()
pdf("gr.pdf", width=20, height=11)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
dev.off()
rm(list=ls())
options(stringsAsFactors = FALSE)
options(shinystan.rstudio = TRUE)
options(mc.cores = parallel::detectCores())
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/undergrads/harold/analyses/germination_stan")
} else
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
library(rstan)
library(shinystan)
library(lme4)
library(ggplot2)
library(rstanarm)
load("mod_time_log.Rdata")
p1<-plot(mod_time_log, pars=c("origin", "strat", "temp1", "temp2", "temp3", "origin:strat", "origin:temp1", "origin:temp2",
"origin:temp3", "strat:temp1", "strat:temp2", "strat:temp3", "origin:strat:temp1", "origin:strat:temp2", "origin:strat:temp3"))
p2<-plot(mod_time_log, pars=c("b[origin sp:1]", "b[strat sp:1]", "b[temp1 sp:1]", "b[temp2 sp:1]", "b[temp3 sp:1]", "b[origin:strat sp:1]",
"b[origin:temp1 sp:1]", "b[origin:temp2 sp:1]", "b[origin:temp3 sp:1]", "b[strat:temp1 sp:1]", "b[strat:temp2 sp:1]", "b[strat:temp3 sp:1]", "b[origin:strat:temp1 sp:1]",
"b[origin:strat:temp2 sp:1]", "b[origin:strat:temp3 sp:1]"))
p3<-plot(mod_time_log, pars=c("b[origin sp:2]", "b[strat sp:2]", "b[temp1 sp:2]", "b[temp2 sp:2]", "b[temp3 sp:2]", "b[origin:strat sp:2]",
"b[origin:temp1 sp:2]", "b[origin:temp2 sp:2]", "b[origin:temp3 sp:2]","b[strat:temp1 sp:2]", "b[strat:temp2 sp:2]", "b[strat:temp3 sp:2]", "b[origin:strat:temp1 sp:2]",
"b[origin:strat:temp2 sp:2]", "b[origin:strat:temp3 sp:2]"))
p4<-plot(mod_time_log, pars=c("b[origin sp:3]", "b[strat sp:3]", "b[temp1 sp:3]", "b[temp2 sp:3]", "b[temp3 sp:3]", "b[origin:strat sp:3]",
"b[origin:temp1 sp:3]", "b[origin:temp2 sp:3]",  "b[origin:temp3 sp:3]", "b[strat:temp1 sp:3]", "b[strat:temp2 sp:3]", "b[strat:temp3 sp:3]", "b[origin:strat:temp1 sp:3]",
"b[origin:strat:temp2 sp:3]", "b[origin:strat:temp3 sp:3]"))
p5<-plot(mod_time_log, pars=c("b[origin sp:4]", "b[strat sp:4]", "b[temp1 sp:4]", "b[temp2 sp:4]", "b[temp3 sp:4]", "b[origin:strat sp:4]",
"b[origin:temp1 sp:4]", "b[origin:temp2 sp:4]",  "b[origin:temp3 sp:4]", "b[strat:temp1 sp:4]", "b[strat:temp2 sp:4]", "b[strat:temp3 sp:4]", "b[origin:strat:temp1 sp:4]",
"b[origin:strat:temp2 sp:4]", "b[origin:strat:temp3 sp:4]"))
p6<-plot(mod_time_log, pars=c("b[origin sp:5]", "b[strat sp:5]", "b[temp1 sp:5]", "b[temp2 sp:5]", "b[temp3 sp:5]", "b[origin:strat sp:5]",
"b[origin:temp1 sp:5]", "b[origin:temp2 sp:5]",  "b[origin:temp3 sp:5]", "b[strat:temp1 sp:5]", "b[strat:temp2 sp:5]", "b[strat:temp3 sp:5]", "b[origin:strat:temp1 sp:5]",
"b[origin:strat:temp2 sp:5]", "b[origin:strat:temp3 sp:5]"))
p7<-plot(mod_time_log, pars=c("b[origin sp:6]", "b[strat sp:6]", "b[temp1 sp:6]", "b[temp2 sp:6]", "b[temp3 sp:6]", "b[origin:strat sp:6]",
"b[origin:temp1 sp:6]", "b[origin:temp2 sp:6]",  "b[origin:temp3 sp:6]","b[strat:temp1 sp:6]", "b[strat:temp2 sp:6]", "b[strat:temp3 sp:6]", "b[origin:strat:temp1 sp:6]",
"b[origin:strat:temp2 sp:6]", "b[origin:strat:temp3 sp:6]"))
pdf("timing_logged_rsi.pdf", width=20, height=11)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
source("http://peterhaschke.com/Code/multiplot.R")
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
dev.off()
load("mod_rate.Rdata")
p1<-plot(mod_rate, pars=c("origin", "strat", "temp1", "temp2", "temp3", "origin:strat", "origin:temp1", "origin:temp2",
"origin:temp3", "strat:temp1", "strat:temp2", "strat:temp3", "origin:strat:temp1", "origin:strat:temp2", "origin:strat:temp3"))
p2<-plot(mod_rate, pars=c("b[origin sp:1]", "b[strat sp:1]", "b[temp1 sp:1]", "b[temp2 sp:1]", "b[temp3 sp:1]", "b[origin:strat sp:1]",
"b[origin:temp1 sp:1]", "b[origin:temp2 sp:1]", "b[origin:temp3 sp:1]", "b[strat:temp1 sp:1]", "b[strat:temp2 sp:1]", "b[strat:temp3 sp:1]", "b[origin:strat:temp1 sp:1]",
"b[origin:strat:temp2 sp:1]", "b[origin:strat:temp3 sp:1]"))
p3<-plot(mod_rate, pars=c("b[origin sp:2]", "b[strat sp:2]", "b[temp1 sp:2]", "b[temp2 sp:2]", "b[temp3 sp:2]", "b[origin:strat sp:2]",
"b[origin:temp1 sp:2]", "b[origin:temp2 sp:2]", "b[origin:temp3 sp:2]","b[strat:temp1 sp:2]", "b[strat:temp2 sp:2]", "b[strat:temp3 sp:2]", "b[origin:strat:temp1 sp:2]",
"b[origin:strat:temp2 sp:2]", "b[origin:strat:temp3 sp:2]"))
p4<-plot(mod_rate, pars=c("b[origin sp:3]", "b[strat sp:3]", "b[temp1 sp:3]", "b[temp2 sp:3]", "b[temp3 sp:3]", "b[origin:strat sp:3]",
"b[origin:temp1 sp:3]", "b[origin:temp2 sp:3]",  "b[origin:temp3 sp:3]", "b[strat:temp1 sp:3]", "b[strat:temp2 sp:3]", "b[strat:temp3 sp:3]", "b[origin:strat:temp1 sp:3]",
"b[origin:strat:temp2 sp:3]", "b[origin:strat:temp3 sp:3]"))
p5<-plot(mod_rate, pars=c("b[origin sp:4]", "b[strat sp:4]", "b[temp1 sp:4]", "b[temp2 sp:4]", "b[temp3 sp:4]", "b[origin:strat sp:4]",
"b[origin:temp1 sp:4]", "b[origin:temp2 sp:4]",  "b[origin:temp3 sp:4]", "b[strat:temp1 sp:4]", "b[strat:temp2 sp:4]", "b[strat:temp3 sp:4]", "b[origin:strat:temp1 sp:4]",
"b[origin:strat:temp2 sp:4]", "b[origin:strat:temp3 sp:4]"))
p6<-plot(mod_rate, pars=c("b[origin sp:5]", "b[strat sp:5]", "b[temp1 sp:5]", "b[temp2 sp:5]", "b[temp3 sp:5]", "b[origin:strat sp:5]",
"b[origin:temp1 sp:5]", "b[origin:temp2 sp:5]",  "b[origin:temp3 sp:5]", "b[strat:temp1 sp:5]", "b[strat:temp2 sp:5]", "b[strat:temp3 sp:5]", "b[origin:strat:temp1 sp:5]",
"b[origin:strat:temp2 sp:5]", "b[origin:strat:temp3 sp:5]"))
p7<-plot(mod_rate, pars=c("b[origin sp:6]", "b[strat sp:6]", "b[temp1 sp:6]", "b[temp2 sp:6]", "b[temp3 sp:6]", "b[origin:strat sp:6]",
"b[origin:temp1 sp:6]", "b[origin:temp2 sp:6]",  "b[origin:temp3 sp:6]","b[strat:temp1 sp:6]", "b[strat:temp2 sp:6]", "b[strat:temp3 sp:6]", "b[origin:strat:temp1 sp:6]",
"b[origin:strat:temp2 sp:6]", "b[origin:strat:temp3 sp:6]"))
pdf("germ_rate.pdf", width=20, height=11)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
dev.off()
load("mod_time.Rdata")
mod_time_log<-NULL
mod_time_log<-mod_time
p1<-plot(mod_time_log, pars=c("origin", "strat", "temp1", "temp2", "temp3", "origin:strat", "origin:temp1", "origin:temp2",
"origin:temp3", "strat:temp1", "strat:temp2", "strat:temp3", "origin:strat:temp1", "origin:strat:temp2", "origin:strat:temp3"))
p2<-plot(mod_time_log, pars=c("b[origin sp:1]", "b[strat sp:1]", "b[temp1 sp:1]", "b[temp2 sp:1]", "b[temp3 sp:1]", "b[origin:strat sp:1]",
"b[origin:temp1 sp:1]", "b[origin:temp2 sp:1]", "b[origin:temp3 sp:1]", "b[strat:temp1 sp:1]", "b[strat:temp2 sp:1]", "b[strat:temp3 sp:1]", "b[origin:strat:temp1 sp:1]",
"b[origin:strat:temp2 sp:1]", "b[origin:strat:temp3 sp:1]"))
p3<-plot(mod_time_log, pars=c("b[origin sp:2]", "b[strat sp:2]", "b[temp1 sp:2]", "b[temp2 sp:2]", "b[temp3 sp:2]", "b[origin:strat sp:2]",
"b[origin:temp1 sp:2]", "b[origin:temp2 sp:2]", "b[origin:temp3 sp:2]","b[strat:temp1 sp:2]", "b[strat:temp2 sp:2]", "b[strat:temp3 sp:2]", "b[origin:strat:temp1 sp:2]",
"b[origin:strat:temp2 sp:2]", "b[origin:strat:temp3 sp:2]"))
p4<-plot(mod_time_log, pars=c("b[origin sp:3]", "b[strat sp:3]", "b[temp1 sp:3]", "b[temp2 sp:3]", "b[temp3 sp:3]", "b[origin:strat sp:3]",
"b[origin:temp1 sp:3]", "b[origin:temp2 sp:3]",  "b[origin:temp3 sp:3]", "b[strat:temp1 sp:3]", "b[strat:temp2 sp:3]", "b[strat:temp3 sp:3]", "b[origin:strat:temp1 sp:3]",
"b[origin:strat:temp2 sp:3]", "b[origin:strat:temp3 sp:3]"))
p5<-plot(mod_time_log, pars=c("b[origin sp:4]", "b[strat sp:4]", "b[temp1 sp:4]", "b[temp2 sp:4]", "b[temp3 sp:4]", "b[origin:strat sp:4]",
"b[origin:temp1 sp:4]", "b[origin:temp2 sp:4]",  "b[origin:temp3 sp:4]", "b[strat:temp1 sp:4]", "b[strat:temp2 sp:4]", "b[strat:temp3 sp:4]", "b[origin:strat:temp1 sp:4]",
"b[origin:strat:temp2 sp:4]", "b[origin:strat:temp3 sp:4]"))
p6<-plot(mod_time_log, pars=c("b[origin sp:5]", "b[strat sp:5]", "b[temp1 sp:5]", "b[temp2 sp:5]", "b[temp3 sp:5]", "b[origin:strat sp:5]",
"b[origin:temp1 sp:5]", "b[origin:temp2 sp:5]",  "b[origin:temp3 sp:5]", "b[strat:temp1 sp:5]", "b[strat:temp2 sp:5]", "b[strat:temp3 sp:5]", "b[origin:strat:temp1 sp:5]",
"b[origin:strat:temp2 sp:5]", "b[origin:strat:temp3 sp:5]"))
p7<-plot(mod_time_log, pars=c("b[origin sp:6]", "b[strat sp:6]", "b[temp1 sp:6]", "b[temp2 sp:6]", "b[temp3 sp:6]", "b[origin:strat sp:6]",
"b[origin:temp1 sp:6]", "b[origin:temp2 sp:6]",  "b[origin:temp3 sp:6]","b[strat:temp1 sp:6]", "b[strat:temp2 sp:6]", "b[strat:temp3 sp:6]", "b[origin:strat:temp1 sp:6]",
"b[origin:strat:temp2 sp:6]", "b[origin:strat:temp3 sp:6]"))
pdf("timing_rsi.pdf", width=20, height=11)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
dev.off()
load(mod_timing_logged)
load("mod_timing_logged.Rdata")
load("mod_time_log.Rdata")
load("mod_time.Rdata")
my_sso <- launch_shinystan(q2, rstudio = getOption("shinystan.rstudio"))
my_sso <- launch_shinystan(mod_time, rstudio = getOption("shinystan.rstudio"))
my_sso <- launch_shinystan(mod_time_log, rstudio = getOption("shinystan.rstudio"))
mod_rs<-stan_lmer(log_y ~ origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 +
(1|sp) +
(origin -1|sp) + (strat -1|sp) + (temp1 -1|sp) + (temp2 -1|sp) +  (temp3 -1|sp) + (origin:strat -1|sp) + (origin:temp1 -1|sp) + (origin:temp2 -1|sp) + (origin:temp3 -1|sp)+
(origin:strat:temp1 -1|sp) + (origin:strat:temp2 -1|sp) + (origin:strat:temp3 -1|sp),
data=germdata, algorithm= "sampling",
prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5),  chains=1, iter=500)
## housekeeping
rm(list=ls())
options(stringsAsFactors = FALSE)
options(shinystan.rstudio = TRUE)
options(mc.cores = parallel::detectCores())
if(length(grep("Lizzie", getwd())>0)) {
setwd("~/Documents/git/projects/misc/undergrads/harold/analyses/germination_stan")
} else
setwd("C:/Users/Owner/Documents/GitHub/germination_stan")
##libraries
library(rstan)
library(shinystan)
library(lme4)
library(ggplot2)
library(rstanarm)
source("http://peterhaschke.com/Code/multiplot.R")
## to download the dev version of rstanarm:
#install.packages("devtools")
#library(devtools)
#devtools::install_github("stan-dev/rstanarm", args = "--preclean", build_vignettes = FALSE)
## What do you want to do?
runstan=FALSE      # set to true if running the stan model
realdata=TRUE    # set to true to run on real data
if (realdata==TRUE) {
# Setting up the  real data  for the Stan model-----------------
load("germs.Rdata") #cleaned and processed real data
germs.y<-(subset(germs,
germinated==1 &
sp!="PLAMED" &  sp!="PLACOR"))    #just the data from seeds that germianted, and taking out the congenerics
data<-germs.y
nseed<-length(unique(data$uniqueid)) #1205 unique seeds
N<-nseed
y<-data$daysfromstart    # dependent variable
log_y=log(y)
temp1<-ifelse(data$temp==16.0, 1, 0) #coding temperature as binary dummy variables
temp2<-ifelse(data$temp==20.7, 1, 0)
temp3<-ifelse(data$temp==25.3,1, 0)
strat<-ifelse(data$strat==30,0,1)
origin<-ifelse(data$origin=="Europe", 0, 1)
intercept<-rep(1, nrow(data))
#setting up to random effects data:
nsp<-length(unique(germs.y$sp))
sp_alph<-data$sp
sp<-ifelse (sp_alph=="CAPBUR", 1,     #making sp numeric, in alphabetical order
ifelse(sp_alph=="CHEMAJ",2,
ifelse(sp_alph=="DACGLO", 3,
ifelse(sp_alph=="PLALAN", 4,
ifelse(sp_alph=="PLAMAJ", 5,
ifelse(sp_alph=="RUMCRI", 6, 7))))))
loc<-as.numeric(as.factor(data$loc))
sfamily<-as.numeric(as.factor(data$uniqind))
nsp <- length(unique(data$sp))
#putting all the data together:
datax <- data.frame(N=N, log_y=log_y, y, temp1=temp1, temp2=temp2, temp3=temp3 ,origin=origin, strat=strat,
nsp=nsp, sp=sp, loc=loc, sfamily=sfamily)
#,nloc=nloc, nfamily=nfamily, loc=loc, family=family)
}
germdata=datax
mod_rs<-stan_lmer(log_y ~ origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 +
(1|sp) +
(origin -1|sp) + (strat -1|sp) + (temp1 -1|sp) + (temp2 -1|sp) +  (temp3 -1|sp) + (origin:strat -1|sp) + (origin:temp1 -1|sp) + (origin:temp2 -1|sp) + (origin:temp3 -1|sp)+
(origin:strat:temp1 -1|sp) + (origin:strat:temp2 -1|sp) + (origin:strat:temp3 -1|sp),
data=germdata, algorithm= "sampling",
prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5),  chains=1, iter=500)
my_sso <- launch_shinystan(mod_rs, rstudio = getOption("shinystan.rstudio"))
p1<-plot(mod_rs_log, pars=c("origin", "strat", "temp1", "temp2", "temp3", "origin:strat", "origin:temp1", "origin:temp2",
"origin:temp3", "strat:temp1", "strat:temp2", "strat:temp3", "origin:strat:temp1", "origin:strat:temp2", "origin:strat:temp3"))
p2<-plot(mod_rs_log, pars=c("b[origin sp:1]", "b[strat sp:1]", "b[temp1 sp:1]", "b[temp2 sp:1]", "b[temp3 sp:1]", "b[origin:strat sp:1]",
"b[origin:temp1 sp:1]", "b[origin:temp2 sp:1]", "b[origin:temp3 sp:1]", "b[strat:temp1 sp:1]", "b[strat:temp2 sp:1]", "b[strat:temp3 sp:1]", "b[origin:strat:temp1 sp:1]",
"b[origin:strat:temp2 sp:1]", "b[origin:strat:temp3 sp:1]"))
p3<-plot(mod_rs_log, pars=c("b[origin sp:2]", "b[strat sp:2]", "b[temp1 sp:2]", "b[temp2 sp:2]", "b[temp3 sp:2]", "b[origin:strat sp:2]",
"b[origin:temp1 sp:2]", "b[origin:temp2 sp:2]", "b[origin:temp3 sp:2]","b[strat:temp1 sp:2]", "b[strat:temp2 sp:2]", "b[strat:temp3 sp:2]", "b[origin:strat:temp1 sp:2]",
"b[origin:strat:temp2 sp:2]", "b[origin:strat:temp3 sp:2]"))
p4<-plot(mod_rs_log, pars=c("b[origin sp:3]", "b[strat sp:3]", "b[temp1 sp:3]", "b[temp2 sp:3]", "b[temp3 sp:3]", "b[origin:strat sp:3]",
"b[origin:temp1 sp:3]", "b[origin:temp2 sp:3]",  "b[origin:temp3 sp:3]", "b[strat:temp1 sp:3]", "b[strat:temp2 sp:3]", "b[strat:temp3 sp:3]", "b[origin:strat:temp1 sp:3]",
"b[origin:strat:temp2 sp:3]", "b[origin:strat:temp3 sp:3]"))
p5<-plot(mod_rs_log, pars=c("b[origin sp:4]", "b[strat sp:4]", "b[temp1 sp:4]", "b[temp2 sp:4]", "b[temp3 sp:4]", "b[origin:strat sp:4]",
"b[origin:temp1 sp:4]", "b[origin:temp2 sp:4]",  "b[origin:temp3 sp:4]", "b[strat:temp1 sp:4]", "b[strat:temp2 sp:4]", "b[strat:temp3 sp:4]", "b[origin:strat:temp1 sp:4]",
"b[origin:strat:temp2 sp:4]", "b[origin:strat:temp3 sp:4]"))
p6<-plot(mod_rs_log, pars=c("b[origin sp:5]", "b[strat sp:5]", "b[temp1 sp:5]", "b[temp2 sp:5]", "b[temp3 sp:5]", "b[origin:strat sp:5]",
"b[origin:temp1 sp:5]", "b[origin:temp2 sp:5]",  "b[origin:temp3 sp:5]", "b[strat:temp1 sp:5]", "b[strat:temp2 sp:5]", "b[strat:temp3 sp:5]", "b[origin:strat:temp1 sp:5]",
"b[origin:strat:temp2 sp:5]", "b[origin:strat:temp3 sp:5]"))
p7<-plot(mod_rs_log, pars=c("b[origin sp:6]", "b[strat sp:6]", "b[temp1 sp:6]", "b[temp2 sp:6]", "b[temp3 sp:6]", "b[origin:strat sp:6]",
"b[origin:temp1 sp:6]", "b[origin:temp2 sp:6]",  "b[origin:temp3 sp:6]","b[strat:temp1 sp:6]", "b[strat:temp2 sp:6]", "b[strat:temp3 sp:6]", "b[origin:strat:temp1 sp:6]",
"b[origin:strat:temp2 sp:6]", "b[origin:strat:temp3 sp:6]"))
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
pdf("timing_no-nest.pdf", width=20, height=11)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
dev.off()
p1<-plot(mod_rs_log, pars=c("origin", "strat", "temp1", "temp2", "temp3", "origin:strat", "origin:temp1", "origin:temp2",
"origin:temp3", "strat:temp1", "strat:temp2", "strat:temp3", "origin:strat:temp1", "origin:strat:temp2", "origin:strat:temp3"))
p2<-plot(mod_rs_log, pars=c("b[origin sp:1]", "b[strat sp:1]", "b[temp1 sp:1]", "b[temp2 sp:1]", "b[temp3 sp:1]", "b[origin:strat sp:1]",
"b[origin:temp1 sp:1]", "b[origin:temp2 sp:1]", "b[origin:temp3 sp:1]", "b[strat:temp1 sp:1]", "b[strat:temp2 sp:1]", "b[strat:temp3 sp:1]", "b[origin:strat:temp1 sp:1]",
"b[origin:strat:temp2 sp:1]", "b[origin:strat:temp3 sp:1]"))
p1<-plot(mod_rs, pars=c("origin", "strat", "temp1", "temp2", "temp3", "origin:strat", "origin:temp1", "origin:temp2",
"origin:temp3", "strat:temp1", "strat:temp2", "strat:temp3", "origin:strat:temp1", "origin:strat:temp2", "origin:strat:temp3"))
p2<-plot(mod_rs, pars=c("b[origin sp:1]", "b[strat sp:1]", "b[temp1 sp:1]", "b[temp2 sp:1]", "b[temp3 sp:1]", "b[origin:strat sp:1]",
"b[origin:temp1 sp:1]", "b[origin:temp2 sp:1]", "b[origin:temp3 sp:1]", "b[strat:temp1 sp:1]", "b[strat:temp2 sp:1]", "b[strat:temp3 sp:1]", "b[origin:strat:temp1 sp:1]",
"b[origin:strat:temp2 sp:1]", "b[origin:strat:temp3 sp:1]"))
p3<-plot(mod_rs, pars=c("b[origin sp:2]", "b[strat sp:2]", "b[temp1 sp:2]", "b[temp2 sp:2]", "b[temp3 sp:2]", "b[origin:strat sp:2]",
"b[origin:temp1 sp:2]", "b[origin:temp2 sp:2]", "b[origin:temp3 sp:2]","b[strat:temp1 sp:2]", "b[strat:temp2 sp:2]", "b[strat:temp3 sp:2]", "b[origin:strat:temp1 sp:2]",
"b[origin:strat:temp2 sp:2]", "b[origin:strat:temp3 sp:2]"))
dev.off()
my_sso <- launch_shinystan(mod_rs, rstudio = getOption("shinystan.rstudio"))
mod_rs<-stan_lmer(log_y ~ origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 +
(1|sp) +
(origin -1|sp) + (strat -1|sp) + (temp1 -1|sp) + (temp2 -1|sp) +  (temp3 -1|sp) + (origin:strat -1|sp) + (origin:temp1 -1|sp) + (origin:temp2 -1|sp) + (origin:temp3 -1|sp)+
(strat:temp1 -1|sp) + (strat:temp2 -1|sp) + (strat:temp3 -1|sp) (origin:strat:temp1 -1|sp) + (origin:strat:temp2 -1|sp) + (origin:strat:temp3 -1|sp),
data=germdata, algorithm= "sampling",
prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5),  chains=1, iter=1000)
mod_rs<-stan_lmer(log_y ~ origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 +
(1|sp) +
(origin -1|sp) + (strat -1|sp) + (temp1 -1|sp) + (temp2 -1|sp) +  (temp3 -1|sp) + (origin:strat -1|sp) + (origin:temp1 -1|sp) + (origin:temp2 -1|sp) + (origin:temp3 -1|sp)+
(strat:temp1 -1|sp) + (strat:temp2 -1|sp) + (strat:temp3 -1|sp) (origin:strat:temp1 -1|sp) + (origin:strat:temp2 -1|sp) + (origin:strat:temp3 -1|sp),
data=germdata, algorithm= "sampling",
prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5),  chains=1, iter=1000)
mod_rs<-stan_lmer(log_y ~ origin + strat + temp1 + temp2 + temp3 +
origin*strat + origin*temp1 + origin*temp2 + origin*temp3 +
strat*temp1 + strat*temp2 + strat*temp3 +
origin*strat*temp1 +  origin*strat*temp2 + origin*strat*temp3 +
(1|sp) +
(origin -1|sp) + (strat -1|sp) + (temp1 -1|sp) + (temp2 -1|sp) +  (temp3 -1|sp) + (origin:strat -1|sp) + (origin:temp1 -1|sp) + (origin:temp2 -1|sp) + (origin:temp3 -1|sp)+
(strat:temp1 -1|sp) + (strat:temp2 -1|sp) + (strat:temp3 -1|sp) + (origin:strat:temp1 -1|sp) + (origin:strat:temp2 -1|sp) + (origin:strat:temp3 -1|sp),
data=germdata, algorithm= "sampling",
prior=normal(), prior_intercept=normal(0,10), prior_aux=cauchy(0,5),  chains=1, iter=500)
p1<-plot(mod_rs, pars=c("origin", "strat", "temp1", "temp2", "temp3", "origin:strat", "origin:temp1", "origin:temp2",
"origin:temp3", "strat:temp1", "strat:temp2", "strat:temp3", "origin:strat:temp1", "origin:strat:temp2", "origin:strat:temp3"))
p2<-plot(mod_rs, pars=c("b[origin sp:1]", "b[strat sp:1]", "b[temp1 sp:1]", "b[temp2 sp:1]", "b[temp3 sp:1]", "b[origin:strat sp:1]",
"b[origin:temp1 sp:1]", "b[origin:temp2 sp:1]", "b[origin:temp3 sp:1]", "b[strat:temp1 sp:1]", "b[strat:temp2 sp:1]", "b[strat:temp3 sp:1]", "b[origin:strat:temp1 sp:1]",
"b[origin:strat:temp2 sp:1]", "b[origin:strat:temp3 sp:1]"))
p3<-plot(mod_rs, pars=c("b[origin sp:2]", "b[strat sp:2]", "b[temp1 sp:2]", "b[temp2 sp:2]", "b[temp3 sp:2]", "b[origin:strat sp:2]",
"b[origin:temp1 sp:2]", "b[origin:temp2 sp:2]", "b[origin:temp3 sp:2]","b[strat:temp1 sp:2]", "b[strat:temp2 sp:2]", "b[strat:temp3 sp:2]", "b[origin:strat:temp1 sp:2]",
"b[origin:strat:temp2 sp:2]", "b[origin:strat:temp3 sp:2]"))
p4<-plot(mod_rs, pars=c("b[origin sp:3]", "b[strat sp:3]", "b[temp1 sp:3]", "b[temp2 sp:3]", "b[temp3 sp:3]", "b[origin:strat sp:3]",
"b[origin:temp1 sp:3]", "b[origin:temp2 sp:3]",  "b[origin:temp3 sp:3]", "b[strat:temp1 sp:3]", "b[strat:temp2 sp:3]", "b[strat:temp3 sp:3]", "b[origin:strat:temp1 sp:3]",
"b[origin:strat:temp2 sp:3]", "b[origin:strat:temp3 sp:3]"))
p5<-plot(mod_rs, pars=c("b[origin sp:4]", "b[strat sp:4]", "b[temp1 sp:4]", "b[temp2 sp:4]", "b[temp3 sp:4]", "b[origin:strat sp:4]",
"b[origin:temp1 sp:4]", "b[origin:temp2 sp:4]",  "b[origin:temp3 sp:4]", "b[strat:temp1 sp:4]", "b[strat:temp2 sp:4]", "b[strat:temp3 sp:4]", "b[origin:strat:temp1 sp:4]",
"b[origin:strat:temp2 sp:4]", "b[origin:strat:temp3 sp:4]"))
p6<-plot(mod_rs, pars=c("b[origin sp:5]", "b[strat sp:5]", "b[temp1 sp:5]", "b[temp2 sp:5]", "b[temp3 sp:5]", "b[origin:strat sp:5]",
"b[origin:temp1 sp:5]", "b[origin:temp2 sp:5]",  "b[origin:temp3 sp:5]", "b[strat:temp1 sp:5]", "b[strat:temp2 sp:5]", "b[strat:temp3 sp:5]", "b[origin:strat:temp1 sp:5]",
"b[origin:strat:temp2 sp:5]", "b[origin:strat:temp3 sp:5]"))
p7<-plot(mod_rs, pars=c("b[origin sp:6]", "b[strat sp:6]", "b[temp1 sp:6]", "b[temp2 sp:6]", "b[temp3 sp:6]", "b[origin:strat sp:6]",
"b[origin:temp1 sp:6]", "b[origin:temp2 sp:6]",  "b[origin:temp3 sp:6]","b[strat:temp1 sp:6]", "b[strat:temp2 sp:6]", "b[strat:temp3 sp:6]", "b[origin:strat:temp1 sp:6]",
"b[origin:strat:temp2 sp:6]", "b[origin:strat:temp3 sp:6]"))
pdf("timing_no-nest.pdf", width=20, height=11)
multiplot(p1,p2, p3, p4, p5, p6, p7, cols=4)
dev.off()
